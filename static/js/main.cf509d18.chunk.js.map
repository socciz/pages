{"version":3,"sources":["reportWebVitals.js","components/Store/Context.js","utils/storage.js","components/Store/Provider.jsx","utils/useStorage.js","components/Routes/Private/Private.jsx","components/SentFile/SentFile.js","service/ApiService.js","components/NavBar/index.jsx","Images/LogoSidebar.png","components/SentFile/index.jsx","components/Pdf/privacidade.pdf","components/Login/index.jsx","components/Documents/index.jsx","components/Address/index.jsx","service/upload-files.service.js","components/Header/index.jsx","Images/logoAnoreg.png","components/TimeLine/index.jsx","components/Dashboard/index.jsx","components/Dimps/Dimps.js","components/NavBarEstabelecimento/index.jsx","components/Dimps/index.jsx","Images/DIMP.png","components/ScreenDimp/index.jsx","components/EditTimeLine/index.jsx","Routes.js","Layout.jsx","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StoreContext","createContext","token","setToken","storage","window","localStorage","Error","set","key","value","setItem","JSON","stringify","get","item","getItem","parse","e","remove","removeItem","Cookie","getJSON","StoreProvider","children","useState","state","setState","useCallback","newValue","undefined","useStorage","Context","Provider","RoutesPrivate","Component","component","rest","useContext","render","to","useStyles","makeStyles","theme","textHeader","padding","bodyTable","width","height","dialogBox","root","flexGrow","title","textAlign","justifyContent","maxWith","ApiService","axios","create","baseURL","headers","Authorization","sessionStorage","rotas","routeName","path","icone","list","fullList","div_links","marginTop","links","marginBottom","paper","position","top","img","marginLeft","SideBar","classes","React","toggleDrawer","anchor","open","event","type","className","role","onClick","onKeyDown","List","map","rota","index","ListItem","button","ListItemIcon","ListItemText","primary","Divider","console","log","clear","Fragment","Button","Drawer","style","flexShrink","onClose","tableIcons","Add","forwardRef","props","ref","Check","Clear","Delete","DetailPanel","Edit","Export","Filter","FirstPage","LastPage","NextPage","PreviousPage","ResetSearch","Search","SortArrow","ThirdStateCheck","ViewColumn","SentFile","estabelecimentos","setEstabelecimentos","useEffect","req","data","setOpen","catch","error","cnpjcpf","motivo","estabelecimentoPayload","setEstabelecimentoPayload","handleAprove","post","res","status","alert","location","reload","handleClose","openEstablismentModal","setOpenEstablismentModal","handleCloseModelFail","nome","razaoSocial","ie","im","iptu","respNome","respEmail","respCpf","respTelefone","respCelular","respCargo","contNome","contEmail","contCrc","cep","endereco","enderecoNumero","enderecoComplemento","bairro","cidade","uf","iduser","banco","agencia","agenciaDigito","conta","contaDigito","estabelecimentoRow","setestabelecimentoRow","icons","columns","field","actions","icon","tooltip","rowData","VisibilityIcon","options","actionsColumnIndex","Dialog","DialogTitle","id","DialogContent","DialogContentText","Grid","container","spacing","xs","md","idtefprovedor","idadquirente","outros","idtecnologia","outrostecnologia","pinpad","pinpadModelo","posto","goodCard","fistData","qtde","faturamentoMedio","DialogActions","variant","color","TextareaAutosize","minRows","placeholder","onChange","target","prevState","response","display","flexDirection","alignItems","backgroundColor","avatar","margin","form","submit","initialState","user","password","withRouter","setValues","setError","history","useHistory","redirect","username","access","validLogin","setValidLogin","handleChange","loginHandle","from","Container","maxWidth","CssBaseline","onSubmit","preventDefault","email","push","noValidate","TextField","label","required","fullWidth","name","autoComplete","autoFocus","FormControlLabel","control","Checkbox","direction","href","Pdf","Alert","severity","heading","fontSize","typography","pxToRem","fontWeight","fontWeightRegular","formControl","minWidth","palette","text","secondary","filepond","onUploadProgress","formData","FormData","append","http","menuButton","marginRight","ButtonAppBar","AppBar","Toolbar","Typography","backButton","instructions","termOfUser","selects","paragraph","getStepContent","stepIndex","estados","municipios","handleChangeChecked","checked","handleClickOpen","handleChangeCep","handleblurCep","handleUf","handleCity","handleCpf","existsCpfCnpj","setEmail","isValidCPF","cnpjIsMaceio","typingCep","setcidade","enableMessageSucess","enableMessageErro","operadora","handleAdq","operadoras","handleOperadora","adquirentes","tecnologias","provedores","pinPads","firstData","yesOrNo","upload","selectFile","message","cnpjExistInDatabase","Form","Group","Text","Label","Control","onKeyUp","senha","Card","Title","Row","Col","nomeFantasia","onBlur","FormControl","InputLabel","Select","MenuItem","sigla","labelId","city","adq","tec","idtecnologi","outro","inputProps","htmlFor","Link","HorizontalLabelPositionBelowStepper","setMunicipios","activeStep","setActiveStep","setEstados","setenableMessageSuccess","setEnableMessageErro","setisValidCPF","setCnpjIsMaceio","setCnpjExistInDatabase","setdisableBtnNext","setAdquirentes","setTecnologias","setProvedores","setChecked","setOnblurCep","setOperadora","getCities","validatemunicipioCnpj","modifyCep","replace","modifyCity","toLowerCase","getPhone","phone","phone1","phone2","length","slice","getCpf","_cpf","isValid","getCnpj","municipio","logradouro","numero","telefone","fantasia","erro","contratoSocial","documentoOficial","selectedFiles","setSelectState","setCurrentFile","setProgress","setMessage","setFileInfos","notify","toast","a","success","dados","prevActiveStep","steps","handleNext","Stepper","alternativeLabel","Step","StepLabel","prevstate","localidade","currentFile","UploadService","Math","round","loaded","total","files","disabled","Dashboard","mes","ano","link","PrintIcon","url","focus","SimpleContainer","processoConc","UpDeferimento","periodoReferencia","src","Dimp","alt","existsCpf","adquirentesEdit","usuario","setAdquirentesEdit","setUsuario","estabelecimento","resEmail","put","PagesRoot","TimeLine","Login","ScreenDimp","Dimps","EdicaoProfile","Layout","Routes","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.cf509d18.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { createContext } from 'react';\r\n\r\nconst StoreContext = createContext({\r\n  token: null,\r\n  setToken: () => {},\r\n});\r\n\r\nexport default StoreContext;\r\n","import Cookie from 'js-cookie';\r\n\r\nconst storage = {};\r\n\r\n// Safari in incognito has local storage, but size 0\r\n// This system falls back to cookies in that situation\r\ntry {\r\n  if (!window.localStorage) {\r\n    throw Error('no local storage');\r\n  }\r\n\r\n  // Setup simple local storage wrapper\r\n  storage.set = (key, value) => localStorage.setItem(key, JSON.stringify(value));\r\n  storage.get = (key) => {\r\n    const item = localStorage.getItem(key);\r\n    try {\r\n      return JSON.parse(item);\r\n    } catch (e) {\r\n      return null;\r\n    }\r\n  };\r\n  storage.remove = key => localStorage.removeItem(key);\r\n} catch (e) {\r\n  storage.set = Cookie.set;\r\n  storage.get = Cookie.getJSON;\r\n  storage.remove = Cookie.remove;\r\n}\r\n\r\nexport default storage;\r\n","import React from 'react';\r\nimport Context from './Context';\r\nimport useStorage from '../../utils/useStorage';\r\n\r\nconst StoreProvider = ({ children }) => {\r\n  const [token, setToken] = useStorage('token');\r\n\r\n  return (\r\n    <Context.Provider\r\n      value={{\r\n        token,\r\n        setToken,\r\n      }}\r\n    >\r\n      {children}\r\n    </Context.Provider>\r\n  )\r\n}\r\n\r\n\r\nexport default StoreProvider;\r\n","import { useCallback, useState } from 'react';\r\nimport storage from './storage';\r\n\r\nexport default function useStorage(key) {\r\n  const [state, setState] = useState(() => storage.get(key));\r\n\r\n  const set = useCallback(newValue => {\r\n    storage.set(key, newValue);\r\n    setState(newValue);\r\n  }, [key]);\r\n\r\n  const remove = useCallback(() => {\r\n    storage.remove(key);\r\n    setState(undefined);\r\n  }, [key]);\r\n\r\n  return [state, set, remove];\r\n}\r\n","import React, { useContext } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\nimport StoreContext from '../../../components/Store/Context';\r\n\r\nconst RoutesPrivate = ({ component: Component, ...rest}) => {\r\n  const { token } = useContext(StoreContext);\r\n\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={() => token\r\n        ? <Component {...rest} />\r\n        : <Redirect to=\"/login\" />\r\n      }\r\n    />\r\n  )\r\n}\r\n\r\nexport default RoutesPrivate;\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles ( (theme) =>({\r\n    \r\n    textHeader: {\r\n        padding: '20px 20px',\r\n    },\r\n\r\n    bodyTable : {\r\n        padding: '20px 20px',\r\n        width: '100%',\r\n        height: '400px'\r\n    },\r\n\r\n    dialogBox : {\r\n        width: '100%'\r\n    },\r\n    \r\n    root : {\r\n        flexGrow: '1',\r\n        width: '100%'\r\n    },\r\n\r\n    title: {\r\n        textAlign: 'center',\r\n        padding: '20px 20px'\r\n    },\r\n\r\n    dialogBox : {\r\n        justifyContent: 'space-between',\r\n        maxWith: '800px'\r\n        \r\n    }\r\n\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { useContext } from 'react';\r\n\r\n\r\nimport axios from 'axios';\r\n\r\nimport StoreContext from '../components/Store/Context';\r\n\r\n\r\n\r\nconst ApiService = axios.create({\r\n  \r\n  baseURL: \"http://ec2-52-5-140-240.compute-1.amazonaws.com:8080\",\r\n  headers: {\r\n    'content-type': 'application/json',\r\n     Authorization: `bearer ${sessionStorage.getItem('token')}`,\r\n    // Authorization: `bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1aWQiOjMsImlhdCI6MTYyNzU2NTI1Mn0.sjDONWCrL8Rru2-DPLz5MuhVOa3Q0Pomx9MEIRedIYA`,\r\n  },\r\n\r\n});\r\n\r\n export { ApiService };\r\n\r\n// strict-origin-when-cross-origin","import React, { useContext } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\n\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { Link } from 'react-router-dom';\r\nimport StoreContext from '../../components/Store/Context';\r\n\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport AllInboxIcon from '@material-ui/icons/AllInbox';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport {ListItemIcon, ListItemText} from '@material-ui/core'\r\nimport logo from '../../Images/LogoSidebar.png'\r\nconst rotas = [\r\n  {\r\n    routeName: 'Moderação',\r\n    path: '/moderador',\r\n    icone:<AllInboxIcon />\r\n  },\r\n  {\r\n    routeName: 'Dashboard',\r\n    path: '/dashboard',\r\n    icone:<AllInboxIcon />\r\n  }\r\n \r\n]\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 240,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n  div_links:{\r\n    marginTop:'25px'\r\n  },\r\n  links: {\r\n    marginTop: '15px',\r\n    marginBottom:'20px',\r\n    padding:'10px'\r\n  },\r\n  paper: {\r\n    position:'relative',\r\n    height: 'calc(100% - 64px)',\r\n    top: 55,\r\n  },\r\n  img:{\r\n    marginLeft:'32px',\r\n    marginBottom:'18px',\r\n    padding:0,\r\n    width:'120px'\r\n  }\r\n  \r\n});\r\n\r\n\r\n\r\nexport default function SideBar() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    top: false\r\n  });\r\n\r\n  const { token ,setToken } = useContext(StoreContext);\r\n\r\n  function logout(){\r\n    console.log(token)\r\n    localStorage.removeItem('token');\r\n    sessionStorage.removeItem('token');\r\n    sessionStorage.clear();\r\n    localStorage.clear();\r\n    setToken(null);\r\n  }\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n    className={classes.paper} \r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      {/* <img src={logo}  className={classes.img} alt=\"logo\" /> */}\r\n      <List>\r\n        {rotas.map((rota, index) => (\r\n          <ListItem className={classes.links} button key={index}>\r\n            <ListItemIcon>{rota.icone}</ListItemIcon>\r\n            <Link to={rota.path} ><ListItemText primary={rota.routeName} /></Link>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      \r\n      <Divider />\r\n      <ListItem> \r\n        <ListItemIcon> <ExitToAppIcon /></ListItemIcon>\r\n        {/* <Link to=\"/\"><ListItemText>Logout</ListItemText></Link> */}\r\n        <button type=\"button\" onClick={() => logout()}>\r\n              Sair\r\n        </button>\r\n      </ListItem>\r\n    </div>\r\n  );\r\n\r\n \r\n  return (\r\n    <div >\r\n      {['left'].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n          <Button onClick={toggleDrawer(anchor, true)}>\r\n            <MenuIcon />\r\n          </Button>\r\n          <Drawer style={{ flexShrink: 0}} anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\r\n            {list(anchor)}\r\n          </Drawer>\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","export default __webpack_public_path__ + \"static/media/LogoSidebar.e34278a8.png\";","import React, { useState, useEffect, forwardRef  } from 'react';\r\nimport { Card, Typography, TextareaAutosize, Grid } from '@material-ui/core';\r\nimport useStyles from './SentFile';\r\nimport { ApiService } from '../../service/ApiService'\r\nimport MaterialTable from \"material-table\";\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { Checkbox} from '@material-ui/core';\r\nimport { ViewCarouselTwoTone } from '@material-ui/icons';\r\nimport NavBar from \"../NavBar\";\r\n\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\n  \r\n \r\n\r\nfunction SentFile() {\r\n\r\n\r\n\r\n   //buscando as informações na api no endpoint que retorna os estabelecimentos pendentes\r\n   const [estabelecimentos, setEstabelecimentos] = useState([])\r\n   useEffect(() => {\r\n       ApiService.get('/moderador/pendentes').then(req => {\r\n        setEstabelecimentos(req.data.data)\r\n          console.log(\"provedores: \" + req.data.data)\r\n          setOpen(false);\r\n       }).catch(error => {\r\n          console.log(error)\r\n       })\r\n    }, [])\r\n\r\n    //criação da const que será enviada no body da requisção para aprocação e reprovação do estabelecimento\r\n    const [estabelecimentoPayload, setEstabelecimentoPayload] = React.useState({\r\n      cnpjcpf: '',\r\n      motivo: ''\r\n    })\r\n\r\n    //função para recarregar a pagina \r\n    function refreshPage() {\r\n    window.location.reload();\r\n   }\r\n\r\n   //função para aprovar o estabelecimento \r\n  function handleAprove(e) {\r\n     console.log(e.cnpjcpf)\r\n     setEstabelecimentoPayload({\r\n      cnpjcpf: e.cnpjcpf\r\n     })\r\n\r\n      //realiza o post no endpoint reponsavel pela aprovação do estabelecimento\r\n      ApiService.post('/moderador/aprovar', estabelecimentoPayload)\r\n          .then(res => {\r\n              console.log(res.status)\r\n              if (res.status === 200) {\r\n                console.log(res)\r\n                alert(\"Estabelecimento Aprovado com sucesso!\");\r\n\r\n                 refreshPage();\r\n              }\r\n\r\n          }).catch(error => {\r\n            console.log(error);\r\n          })\r\n          .catch(function (error) {\r\n              console.log(error);\r\n          });\r\n  }\r\n\r\n    // função para reprovação do estabelecimento \r\n  function handleFail(e) {\r\n\r\n    //realiza o post no endpoint reponsavel pela reprovação do estabelecimento\r\n     ApiService.post('/moderador/reprovar', estabelecimentoPayload)\r\n         .then(res => {\r\n             console.log(res.status)\r\n             if (res.status === 200) {\r\n               console.log(res)\r\n               alert(\"Estabelecimento Reprovado!\");\r\n            // refreshPage();\r\n             }else{\r\n              alert(res.response);\r\n             }\r\n\r\n         }).catch(error => {\r\n             console.log(error)\r\n             alert(\"O Estabelecimento não doi reprovado!\");\r\n         })\r\n\r\n         .catch(function (error) {\r\n             console.log(error);\r\n         });\r\n }\r\n    \r\n const handleChange = (e) => {\r\n  const { id, value } = e.target\r\n  setEstabelecimentoPayload(prevState => ({\r\n    ...prevState,\r\n    [id]: value\r\n  }))\r\n  // console.log(state)\r\n}\r\n  \r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n\r\n    // Responsavel por abri o modal de reprovação de estabelecimento\r\n    const [openEstablismentModal, setOpenEstablismentModal] = React.useState(false);\r\n\r\n    const handleCloseModelFail = () => {\r\n      setOpenEstablismentModal(false);\r\n    };\r\n    \r\n    \r\n    const [estabelecimentoRow, setestabelecimentoRow] = useState({\r\n      nome: \"\",\r\n      status: \"\",\r\n      cnpjcpf:\"\",\r\n      razaoSocial: \"\",\r\n      ie: \"\",\r\n      im: \"\",\r\n      iptu: \"\",\r\n      respNome: \"\",\r\n      respEmail: \"\",\r\n      respCpf: \"\",\r\n      respTelefone: \"\",\r\n      respCelular: \"\",\r\n      respCargo: \"\",\r\n      contNome: \"\",\r\n      contEmail: \"\",\r\n      contCrc: \"\",\r\n      cep: \"\",\r\n      endereco: \"\",\r\n      enderecoNumero: \"\",\r\n      enderecoComplemento: \"\",\r\n      bairro: \"\",\r\n      cidade: \"\",\r\n      uf: \"\",\r\n      iduser: \"\",\r\n      banco: \"\",\r\n      agencia: \"\",\r\n      agenciaDigito: \"\",\r\n      conta:\"\",\r\n      contaDigito: \"\",\r\n      \r\n      \r\n\r\n    })\r\n\r\n\r\n    function showModalReproveEstablishment(value){\r\n\r\n     console.log(value.cnpjcpf)\r\n   \r\n\r\n      setEstabelecimentoPayload({\r\n        cnpjcpf: value.cnpjcpf, \r\n        motivo: ''\r\n       })\r\n\r\n      setOpenEstablismentModal(true);\r\n    }\r\n\r\n    // Detalhes do estabelecimento\r\n      function detailsEstablishment(value){\r\n      setestabelecimentoRow({\r\n      nome: value.nome,\r\n      status: value.status,\r\n      cnpjcpf: value.cnpjcpf,\r\n      razaoSocial: value.razaoSocial,\r\n      ie: value.ie,\r\n      im: value.im,\r\n      iptu: value.iptu,\r\n      respNome: value.respNome,\r\n      respEmail: value.respEmail,\r\n      respCpf: value.respCpf,\r\n      respTelefone: value.respTelefone,\r\n      respCelular: value.respCelular,\r\n      respCargo: value.respCargo,\r\n      contNome: value.contNome,\r\n      contEmail: value.contEmail,\r\n      contCrc: value.contCrc,\r\n      cep: value.cep,\r\n      endereco: value.endereco,\r\n      enderecoNumero: value.enderecoNumero,\r\n      enderecoComplemento: value.enderecoComplemento,\r\n      bairro: value.bairro,\r\n      cidade: value.cidade,\r\n      uf: value.uf,\r\n      iduser: value.iduser,\r\n      banco: value.banco,\r\n      agencia: value.agencia,\r\n      agenciaDigito: value.agenciaDigito,\r\n      conta: value.conta,\r\n      contaDigito: value.contaDigito\r\n     \r\n\r\n      })\r\n\r\n      \r\n      setOpen(true);\r\n    }\r\n\r\n    const handleClickOpen = (teste) => {\r\n      setestabelecimentoRow(teste)\r\n      //setOpen(true);\r\n    };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <NavBar />\r\n      <MaterialTable\r\n        icons={tableIcons}\r\n        title=\"Moderação\"\r\n        columns={[\r\n          { title: \"Estabelecimento\", field: \"nome\" },\r\n          { title: \"CNPJ / CPF\", field: \"cnpjcpf\" },\r\n          { title: \"Razão social\", field: \"razaoSocial\" },\r\n          { title: \"Responsavel\", field: \"respNome\" },\r\n          { title: \"E-mail\", field: \"respEmail\" },\r\n          { title: \"Telefone\", field: \"respTelefone\" },\r\n        ]}\r\n        data={estabelecimentos}\r\n        actions={[\r\n          {\r\n            icon: Check,\r\n            tooltip: \"Aprovar\",\r\n            onClick: (event, rowData) => handleAprove(rowData),\r\n          },\r\n          {\r\n            icon: Clear,\r\n            tooltip: \"Reprovar\",\r\n            onClick: (event, rowData) => showModalReproveEstablishment(rowData),\r\n          },\r\n          {\r\n            icon: VisibilityIcon,\r\n            tooltip: \"Detalhes\",\r\n\r\n            onClick: (event, rowData) => detailsEstablishment(rowData),\r\n          },\r\n        ]}\r\n        options={{\r\n          actionsColumnIndex: -1,\r\n        }}\r\n      />\r\n      \r\n      \r\n      <Dialog\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        className={classes.dialogBox}\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          Informações do Estabelecimento\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            <div className={classes.root}>\r\n              <Grid container spacing={1}>\r\n                <Grid item xs={12} md={6}>\r\n                  <b>Nome: </b>\r\n                  {estabelecimentoRow.nome}\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  <b>CPF/CNPJ: </b>\r\n                  {estabelecimentoRow.cnpjcpf}\r\n                </Grid>\r\n                <Grid item xs={12} md={12}>\r\n                  <b>Razão Social: </b>\r\n                  {estabelecimentoRow.razaoSocial}\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  <b>Inscr. Estadual: </b> {estabelecimentoRow.ie}\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  <b>Inscr. Municipal: </b>\r\n                  {estabelecimentoRow.im}\r\n                </Grid>\r\n\r\n                <Grid item xs={12} md={12}>\r\n                  <b>Responsável: </b>\r\n                  {estabelecimentoRow.respNome}\r\n                </Grid>\r\n\r\n                <Grid item xs={12} md={6}>\r\n                  <b>Email: </b>\r\n                  {estabelecimentoRow.respEmail}\r\n                </Grid>\r\n\r\n                <Grid item xs={12} md={6}>\r\n                  <b>Email: </b>\r\n                  {estabelecimentoRow.contEmail}\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  <b>CRC: </b>\r\n                  {estabelecimentoRow.contCrc}\r\n                </Grid>\r\n\r\n                <Grid item xs={12} md={6}>\r\n                  <b>CEP: </b>\r\n                  {estabelecimentoRow.cep}\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  <b>Endereço: </b>\r\n                  {estabelecimentoRow.endereco}\r\n                </Grid>\r\n                <Grid item xs={12} md={3}>\r\n                  <b>Nº: </b>\r\n                  {estabelecimentoRow.enderecoNumero}\r\n                </Grid>\r\n                <Grid item xs={12} md={3}>\r\n                  <b>Complemento: </b>\r\n                  {estabelecimentoRow.enderecoComplemento}\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  <b>Bairro: </b>\r\n                  {estabelecimentoRow.bairro}\r\n                </Grid>\r\n                <Grid item xs={12} md={4}>\r\n                  <b>cidade: </b>\r\n                  {estabelecimentoRow.cidade}\r\n                </Grid>\r\n                <Grid item xs={12} md={2}>\r\n                  <b>UF: </b>\r\n                  {estabelecimentoRow.uf}\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  <b>Telefone: </b>\r\n                  {estabelecimentoRow.respTelefone}\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  <b>Celular: </b>\r\n                  {estabelecimentoRow.respCelular}\r\n                </Grid>\r\n                <Grid item xs={12} md={12}>\r\n                  <DialogTitle id=\"alert-dialog-title\" >\r\n                  Adquirintes\r\n                </DialogTitle>\r\n                </Grid>\r\n                \r\n                <Grid item xs={12} md={6}>\r\n                  <b>Provedor: </b>\r\n                  {estabelecimentoRow.idtefprovedor}\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  <b>Adquirente: </b>\r\n                  {estabelecimentoRow.idadquirente}\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  <b>Outros: </b>\r\n                  {estabelecimentoRow.outros}\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  <b>Tecnologia: </b>\r\n                  {estabelecimentoRow.idtecnologia}\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  <b>Tecnologia (outras): </b>\r\n                  {estabelecimentoRow.outrostecnologia}\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  <b>Pin Pad: </b>\r\n                  {estabelecimentoRow.pinpad}\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  <b>Modelo: </b>\r\n                  {estabelecimentoRow.pinpadModelo}\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  <b>Posto: </b>\r\n                  {estabelecimentoRow.posto}\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  <b>Good Card: </b>\r\n                  {estabelecimentoRow.goodCard}\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  <b>Data: </b>\r\n                  {estabelecimentoRow.fistData}\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  <b>Quantidade: </b>\r\n                  {estabelecimentoRow.qtde}\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                  <b>Faturamento Médio: </b>\r\n                  {estabelecimentoRow.faturamentoMedio}\r\n                </Grid>\r\n              </Grid>\r\n            </div>\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button variant=\"contained\" onClick={handleClose} color=\"primary\">\r\n            Fechar\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n      <Dialog\r\n        open={openEstablismentModal}\r\n        onClose={handleCloseModelFail}\r\n        aria-labelledby=\"alert-dialog-title\"\r\n        aria-describedby=\"alert-dialog-description\"\r\n        className={classes.dialogBox}\r\n      >\r\n        <DialogTitle id=\"alert-dialog-title\">\r\n          Informações do Estabelecimento\r\n        </DialogTitle>\r\n        <DialogContent>\r\n          <DialogContentText id=\"alert-dialog-description\">\r\n            <TextareaAutosize\r\n              aria-label=\"minimum height\"\r\n              minRows={5}\r\n              placeholder=\"Motivo..\"\r\n              style={{ width: \"100%\" }}\r\n              id=\"motivo\"\r\n              onChange={handleChange}\r\n              value={estabelecimentoPayload.motivo}\r\n            />\r\n          </DialogContentText>\r\n        </DialogContent>\r\n        <DialogActions>\r\n          <Button variant=\"contained\" onClick={handleFail} color=\"primary\">\r\n            Reprovar\r\n          </Button>\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={handleCloseModelFail}\r\n            color=\"primary\"\r\n          >\r\n            Fechar\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n  \r\n  \r\n}\r\nexport default SentFile;","export default __webpack_public_path__ + \"static/media/privacidade.fe3dc9c3.pdf\";","import React, { useState, useEffect, useContext } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport StoreContext from '../Store/Context';\r\nimport Button from '@material-ui/core/Button';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Pdf from '../Pdf/privacidade.pdf';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport { withRouter, Redirect } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport { ApiService } from '../../service/ApiService';\r\nimport { Alert } from '@material-ui/lab';\r\n\r\n\r\n\r\nconst preventDefault = (event) => event.preventDefault();\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        backgroundColor: 'white',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: 'white',\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n    alert: {\r\n        marginTop: '50px'\r\n    }\r\n}));\r\n\r\nfunction initialState() {\r\n    return { user: '', password: '' };\r\n  }\r\n  \r\n\r\nfunction SignIn(props) {\r\n\r\n  const [values, setValues] = useState(initialState);\r\n  const [error, setError] = useState(null);\r\n  const { setToken } = useContext(StoreContext);\r\n  const { token } = useContext(StoreContext);\r\n  const history = useHistory();\r\n\r\n\r\n    const classes = useStyles();\r\n    const [redirect, setRedirect] = useState(false)\r\n    const [state, setState] = React.useState({\r\n        username: '',\r\n        password: '',\r\n        access: '',\r\n    })\r\n\r\n    const [validLogin, setValidLogin] = useState('')\r\n    const handleChange = (e) => {\r\n        const { id, value } = e.target\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [id]: value\r\n        }))\r\n        console.log(id + ' ' + value)\r\n    }\r\n\r\n    function handleSubmit(e) {\r\n        e.preventDefault()\r\n        ApiService.post('/sessions', state)\r\n            .then(res => {\r\n                console.log(res.status)\r\n                if (res.status === 200) {\r\n\r\n                    // localStorage.removeItem('token');\r\n                    // sessionStorage.removeItem('token');\r\n                    // setToken(null);\r\n                    sessionStorage.setItem('token', res.data.token)\r\n                    sessionStorage.setItem('email', res.data.email)\r\n                    sessionStorage.setItem('access', res.data.access)\r\n                    localStorage.setItem(token, res.data.token);\r\n\r\n                      setToken(res.data.token);\r\n                      if(res.data.access == \"MODERADOR\"){\r\n                        return history.push('/moderador');\r\n                      }\r\n                      else if(res.data.access == \"ESTABELECIMENTO\"){\r\n                        return history.push('/perfil');\r\n                      }\r\n                      \r\n                    \r\n                    setError(error);\r\n                    setValues(initialState);\r\n                }\r\n\r\n            }).catch(error => {\r\n                setValidLogin(false)\r\n                console.log('ERRO: '+error)\r\n            })\r\n            .catch(function (error) {\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n\r\n    function loginHandle() {\r\n        if (validLogin === '') {\r\n            return 'empty'\r\n        }\r\n        if (validLogin) {\r\n            return 'success'\r\n        }\r\n        if (!validLogin) {\r\n            return 'warning'\r\n        }\r\n    }\r\n\r\n\r\n    const { from } = props.location.state || '/'\r\n \r\n    return (\r\n\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n\r\n                <form onSubmit={handleSubmit} className={classes.form} noValidate>\r\n\r\n                    <TextField\r\n                        label=\"CPF ou cnpj\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"username\"\r\n                        placeholder=\"CPF ou Cnpj\"\r\n                        name=\"cpf_cnpj\"\r\n                        autoComplete=\"cpf_cnpj\"\r\n                        autoFocus\r\n                        value={state.username}\r\n                        onChange={handleChange}\r\n\r\n                    />\r\n                    <TextField\r\n                        label=\"Senha\"\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        placeholder=\"Senha\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        autoComplete=\"current-password\"\r\n                        value={state.password}\r\n                        onChange={handleChange}\r\n                    />\r\n\r\n                    <FormControlLabel\r\n                        control={<Checkbox value=\"remember\" color=\"primary\" />}\r\n                        label=\"Lembrar Senha\"\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Entrar\r\n                    </Button>\r\n                    <Grid container direction='column'>\r\n                        <Grid item xs>\r\n                            <Link variant=\"body2\">\r\n                                Esqueceu a senha?\r\n                            </Link>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Link to=\"/cadastro-estabelecimento\" variant=\"body2\">\r\n                                Não tem uma conta? Cadastre-se\r\n                            </Link>\r\n                        </Grid>\r\n                        <Grid item>\r\n                            <Link to=\"/validacao-dimp\" variant=\"body2\">\r\n                                Validar Dimp\r\n                            </Link>\r\n                        </Grid>\r\n                        <Grid item>\r\n                           \r\n                            <a href={Pdf} target='_blank'>Termos de privacidade</a>\r\n                           \r\n                        </Grid>\r\n                    </Grid>\r\n                    {}\r\n                    {redirect &&(\r\n                        <Redirect to={from || '/moderador'} />\r\n                    )}\r\n                </form>\r\n            </div>\r\n            <div className={classes.alert}>\r\n                {loginHandle() === 'warning' ? <Alert severity=\"error\">Login invalido</Alert> : ''}\r\n                {loginHandle() === 'empty' ? '' : ''}\r\n                {loginHandle() === 'success' ? <Alert severity=\"success\">Login válido</Alert> : ''}\r\n            </div>\r\n\r\n            {/* <Alert severity=\"error\">Login invalido</Alert> */}\r\n\r\n        </Container>\r\n    )\r\n    // }\r\n}\r\nexport default withRouter(SignIn)","\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Button } from '@material-ui/core';\r\n\r\nimport './Documents.css'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n}));\r\n\r\nexport default function SimpleAccordion() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      \r\n          \r\n          \r\n       \r\n        <React.Fragment>\r\n            \r\n            <Container maxWidth=\"md\">\r\n            \r\n                <div className=\"flex-div\">\r\n                    <h6><b>Documentação Comprobatória (Para moderação)</b></h6>\r\n                    <label style={{ marginLeft: '20px' }}>Envie ao menos um documento para prosseguir com o cadastro</label>\r\n                </div>\r\n                <div className=\"flex-div\">\r\n                    <div className=\"itens\">\r\n                        <h6>Contrato Social</h6>\r\n                        <Button variant=\"contained\" component=\"label\" color=\"secondary\">\r\n                            Escolher arquivo\r\n                            <input type=\"file\" hidden />\r\n                        </Button>\r\n\r\n                    </div>\r\n                    <div className=\"itens\">\r\n                        <h6>CNH</h6>\r\n                        <Button variant=\"contained\" component=\"label\" color=\"secondary\">\r\n                            Escolher arquivo\r\n                            <input type=\"file\" hidden />\r\n                        </Button>\r\n\r\n                    </div>\r\n                    <div className=\"itens\">\r\n                        <h6>CPF</h6>\r\n                        <Button variant=\"contained\" component=\"label\" color=\"secondary\">\r\n                            Escolher arquivo\r\n                            <input type=\"file\" hidden />\r\n                        </Button>\r\n\r\n                    </div>\r\n                    {/* </Grid> */}\r\n                </div>\r\n                <hr />\r\n                <Button variant=\"contained\" color=\"primary\">\r\n                    Cadastrar\r\n                </Button>\r\n            </Container>\r\n        </React.Fragment>\r\n\r\n \r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n","\r\n// CONSUMIR API PARA LISTAGEM DE ESTADOS E MUNICIPIOS\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport { TextField } from '@material-ui/core';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport { useState } from 'react';\r\nimport { Form } from 'react-bootstrap'\r\nimport axios from 'axios'\r\nimport { constant } from 'async';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        flexGrow: 1,\r\n    },\r\n    formControl: {\r\n        margin: theme.spacing(1),\r\n        minWidth: 120,\r\n    },\r\n    paper: {\r\n        padding: theme.spacing(2),\r\n        textAlign: 'center',\r\n        color: theme.palette.text.secondary,\r\n    },\r\n}));\r\n\r\n\r\n\r\nexport default function Adress() {\r\n    const classes = useStyles();\r\n\r\n    const estados = [] // CONSUMIR COM API\r\n    const municipios = [] // CONSUMIR COM API\r\n\r\n    // console.log(estados)\r\n    const [state, setState] = useState({\r\n        uf: '',\r\n        municipio: 's',\r\n        cep: '',\r\n        bairro: '',\r\n        endereco: '',\r\n        numero: '',\r\n        complemento: '',\r\n        referencia: '',\r\n\r\n    })\r\n    function getCep() {\r\n        axios.get(`https://viacep.com.br/ws/${state.cep}/json/`).then(req => {\r\n            // console.log(req.data)\r\n            setState({\r\n                uf: req.data.uf,\r\n                municipio: req.data.localidade,\r\n                bairro: req.data.bairro,\r\n                endereco: req.data.logradouro,\r\n            })\r\n        })\r\n    }\r\n    \r\n    const handleChange = (e) => {\r\n        const { id, value } = e.target\r\n        //condicional cep\r\n        // if(id == \"cep\"){\r\n        //     getCep()\r\n        // }\r\n        setState(prevState => ({\r\n            ...prevState,\r\n            [id]: value\r\n        }))\r\n        console.log(id + ' ' + value)\r\n    }\r\n    return (\r\n        <div className={classes.root}>\r\n\r\n            <React.Fragment>\r\n\r\n                <Container maxWidth=\"md\">\r\n                    <h3>Endereço</h3>\r\n                    <form className={classes.root} noValidate autoComplete=\"off\">\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justifyContent=\"flex-start\"\r\n                            alignItems=\"flex-start\"\r\n                        >\r\n\r\n                            <Form.Group className={classes.formControl}>\r\n                                <Form.Label>CEP</Form.Label>\r\n                                <Form.Control id=\"cep\" onChange={handleChange} value={state.cep} required type=\"text\" />\r\n                            </Form.Group>\r\n                            <Form.Group className={classes.formControl}>\r\n                                <Form.Label>Endereço</Form.Label>\r\n                                <Form.Control id=\"endereco\" onChange={handleChange} value={state.endereco} required type=\"text\" />\r\n                            </Form.Group>\r\n                            <Form.Group className={classes.formControl}>\r\n                                <Form.Label>Numero</Form.Label>\r\n                                <Form.Control id=\"numero\" onChange={handleChange} value={state.numero} required type=\"text\" />\r\n                            </Form.Group>\r\n\r\n                        </Grid>\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justifyContent=\"flex-start\"\r\n                            alignItems=\"flex-start\"\r\n                        >\r\n                            <Form.Group className={classes.formControl}>\r\n                                <Form.Label>Complemento</Form.Label>\r\n                                <Form.Control id=\"complemento\" onChange={handleChange} value={state.complemento} required type=\"text\" />\r\n                            </Form.Group>\r\n                            <Form.Group className={classes.formControl}>\r\n                                <Form.Label>Bairro</Form.Label>\r\n                                <Form.Control id=\"bairro\" onChange={handleChange}  value={state.bairro} required type=\"text\" />\r\n                            </Form.Group>\r\n\r\n\r\n                        </Grid>\r\n                        <Grid\r\n                            container\r\n                            direction=\"row\"\r\n                            justifyContent=\"flex-start\"\r\n                            alignItems=\"flex-start\"\r\n                        >\r\n\r\n                            <FormControl className={classes.formControl} className={classes.formControl}>\r\n                                <InputLabel id=\"uf\">UF</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-label\"\r\n                                    id=\"demo-simple-select\"\r\n                                    value={state.uf}\r\n                                    onChange={handleChange}\r\n                                > {estados.map((uf, index) => {\r\n                                    return <MenuItem value={uf.nome}>{uf.nome}</MenuItem>\r\n                                })}\r\n                                </Select>\r\n                            </FormControl>\r\n                            <FormControl className={classes.formControl}>\r\n                                <InputLabel id=\"municipio\">Municípío</InputLabel>\r\n                                <Select\r\n                                    labelId=\"demo-simple-select-label\"\r\n                                    id=\"demo-simple-select\"\r\n                                    value={state.municipio}\r\n                                    onChange={handleChange}\r\n                                >\r\n                                    {municipios.map((municipio) => {\r\n                                        return <MenuItem value={municipio.nome}>{municipio.nome}</MenuItem>\r\n                                    })}\r\n                                </Select>\r\n                            </FormControl>\r\n                        </Grid>\r\n                    </form>\r\n                </Container>\r\n            </React.Fragment>\r\n        </div>\r\n    );\r\n}\r\n","\r\nimport http from 'axios';\r\nimport { ApiService } from './ApiService';\r\n\r\nclass UploadFilesService {\r\n  upload(filepond, onUploadProgress) {\r\n    let formData = new FormData();\r\n\r\n    formData.append(\"filepond\", filepond);\r\n\r\n    return ApiService.post(\"http://ec2-52-5-140-240.compute-1.amazonaws.com:8080/upload\", formData, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n        \"tipo\":\"1\",\r\n        \"cnpjcpf\": sessionStorage.getItem('cnpjcpf'),\r\n        Authorization: `bearer ${sessionStorage.getItem('token')}`,\r\n      },\r\n      onUploadProgress,\r\n    });\r\n  }\r\n\r\n  getFiles() {\r\n    return http.get(\"/files\");\r\n  }\r\n}\r\n\r\nexport default new UploadFilesService();\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport logo from '../../Images/LogoSidebar.png'\r\nimport logoAnoreg from '../../Images/logoAnoreg.png'\r\nimport { Link, BrowserRouter } from 'react-router-dom'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          {/* <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <MenuIcon />\r\n          </IconButton> */}\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            ISS\r\n          </Typography>\r\n          <Link to=\"/login\">\r\n          <Button color=\"inherit\">Login</Button>\r\n          </Link>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","export default __webpack_public_path__ + \"static/media/logoAnoreg.9c98676d.png\";","\r\nimport Account from '../Account'\r\nimport Documents from '../Documents'\r\nimport Establishment from '../Establishment'\r\nimport TermsOfUser from '../TermsOfUser'\r\nimport Address from '../Address'\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useState } from 'react'\r\n// import { ApiService } from '../../service/ApiService'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { Container, FormCard, Row, Col, Form, Card } from \"react-bootstrap\";\r\nimport { Checkbox, Link } from '@material-ui/core';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport '../Documents/Documents.css'\r\nimport axios from 'axios'\r\nimport { useEffect } from 'react'\r\nimport { ApiService } from '../../service/ApiService'\r\nimport UploadService from \"../../service/upload-files.service\";\r\nimport Alert from \"@material-ui/lab/Alert\"\r\nimport { Redirect } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { TextareaAutosize } from '@material-ui/core';\r\nimport Header from '../Header'\r\n\r\n// import './TimeLine.css'\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  backButton: {\r\n    marginLeft: 'auto',\r\n  },\r\n  instructions: {\r\n\r\n    margin: 'auto',\r\n    // marginTop: theme.spacing(1),\r\n    // marginBottom: theme.spacing(1),\r\n    // alignContent:'center',\r\n    // alignItems:'center'\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n  termOfUser: {\r\n    // backgroundColor: '#E6E6E6',\r\n    // textAlign: 'center'\r\n    display: 'block',\r\n    margin: 'auto'\r\n  },\r\n  selects: {\r\n    display: 'flex',\r\n    flexDirection: 'row'\r\n  },\r\n  title: {\r\n    padding: theme.spacing(1, 1),\r\n    textAlign: 'center',\r\n    fontWeight: 'bold'\r\n\r\n  },\r\n  paragraph: {\r\n    padding: theme.spacing(1),\r\n    textAlign: 'justify'\r\n\r\n  },\r\n  dialogBox: {\r\n    width: theme.spacing(80)\r\n  },\r\n\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Registrar', 'Estabelecimento', 'Endereço', 'Operadoras', 'Documentos'];\r\n}\r\n\r\nfunction getStepContent(stepIndex, handleChange, setState, state, estados, municipios, handleChangeChecked, classes, handleClose, checked, handleClickOpen, open, handleChangeCep, handleblurCep, handleUf, handleCity, \r\n  handleCpf, existsCpfCnpj, setEmail , isValidCPF, cnpjIsMaceio,typingCep, cidade, setcidade, endereco, enableMessageSucess, enableMessageErro,   operadora, handleAdq,\r\n   operadoras, handleOperadora, adquirentes, tecnologias, provedores, pinPads, firstData, yesOrNo, upload, selectFile, message, cnpjExistInDatabase) {\r\n  switch (stepIndex) {\r\n    case 0:\r\n      return <div>\r\n        <Container>\r\n\r\n          <h6 className=\"text\">{\"Cadastrar Com CPF/CNPJa\"}</h6>\r\n\r\n          <Form className=\"CpfForm\" width={100}>\r\n            <Form.Group>\r\n              <Form.Text className=\"text-muted\">\r\n                Preencher campos abaixo com os seus dados.\r\n              </Form.Text>\r\n              <Form.Label >CPF ou CNPJ</Form.Label>\r\n              <Form.Control value={state.cnpjcpf} id=\"cnpjcpf\" onChange={handleChange} onKeyUp={existsCpfCnpj} required type=\"text\" />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Nome Completo</Form.Label>\r\n              <Form.Control value={state.nome} id=\"nome\" onChange={handleChange} required type=\"text\" />\r\n\r\n\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Senha</Form.Label>\r\n              <Form.Control value={state.senha} id=\"senha\" onChange={handleChange} required type=\"password\" />\r\n\r\n\r\n            </Form.Group>\r\n            <Form.Group>\r\n              {/* <button onClick={()=>{props.handleForm({nome:'lucas'})}}>Feito</button> */}\r\n            </Form.Group>\r\n          </Form>\r\n          <div className={classes.alert}>\r\n            {!isValidCPF && isValidCPF !== null ? <Alert severity=\"error\">CPF informado encontra-se cadastrado em nosso banco de dados</Alert> : ''}\r\n            {!cnpjExistInDatabase && cnpjExistInDatabase !== null ? <Alert severity=\"error\">CNPJ informado encontra-se cadastrado em nosso banco de dados</Alert> : ''}\r\n            {!cnpjIsMaceio && cnpjIsMaceio !== null ? <Alert severity=\"error\">CNPJ informado não é de Maceió</Alert> : ''}\r\n            {isValidCPF === null ? '' : ''}\r\n            {isValidCPF && isValidCPF !== null ? <Alert severity=\"success\">CPF Válido</Alert> : ''}\r\n            {cnpjIsMaceio && cnpjIsMaceio !== null ? <Alert severity=\"success\">CNPJ Válido</Alert> : ''}\r\n          </div>\r\n          <ToastContainer />\r\n        </Container>\r\n      </div>\r\n\r\n    case 1:\r\n      return <Container>\r\n        <Card className='Card'>\r\n          <Card.Title>Cadastre o seu estabelecimento</Card.Title>\r\n          <Form>\r\n            <Row>\r\n              <Col xs={4}>\r\n                <Form.Group>\r\n                  <Form.Label>Razão Social</Form.Label>\r\n                  <Form.Control onChange={handleChange} value={state.razaoSocial} id=\"razaoSocial\" required type=\"text\" />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col xs={4}>\r\n                <Form.Group>\r\n                  <Form.Label>Nome Fantasia</Form.Label>\r\n                  <Form.Control onChange={handleChange} value={state.nomeFantasia} id=\"nomeFantasia\" type=\"text\" />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={4}>\r\n                <Form.Group>\r\n                  <Form.Label>Inscrição Estadual</Form.Label>\r\n                  <Form.Control onChange={handleChange} value={state.ie} id=\"ie\" required type=\"number\" />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col xs={4}>\r\n                <Form.Group>\r\n                  <Form.Label>Inscrição Municipal</Form.Label>\r\n                  <Form.Control onChange={handleChange} value={state.im} id=\"im\" required type=\"number\" />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col xs={4}>\r\n                <Form.Group>\r\n                  <Form.Label>Sequencial IPTU</Form.Label>\r\n                  <Form.Control onChange={handleChange} value={state.iptu} id=\"iptu\" required type=\"number\" />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={4}>\r\n                <Form.Group>\r\n                  <Form.Label>Nome do Responsável</Form.Label>\r\n                  <Form.Control onChange={handleChange} value={state.respNome} id=\"respNome\" required type=\"text\" />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col xs={4}>\r\n                <Form.Group>\r\n                  <Form.Label>Email do Responsável</Form.Label>\r\n                  <Form.Control onChange={handleChange} value={state.respEmail} id=\"respEmail\"  onKeyUp={setEmail} required type=\"email\" />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col xs={4}>\r\n                <Form.Group>\r\n                  <Form.Label>CPF do Responsável</Form.Label>\r\n                  <Form.Control onChange={handleChange} value={state.respCpf} id=\"respCpf\" required type=\"text\" />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={6}>\r\n                <Form.Group>\r\n                  <Form.Label>Telefone do Responsável</Form.Label>\r\n                  <Form.Control onChange={handleChange} value={state.respTelefone} id=\"respTelefone\" required type=\"text\" />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col xs={6}>\r\n                <Form.Group>\r\n                  <Form.Label>Segundo Telefone do Responsável</Form.Label>\r\n                  <Form.Control onChange={handleChange} value={state.respCelular} id=\"respCelular\" type=\"text\" />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={4}>\r\n                <Form.Group>\r\n                  <Form.Label>Nome do Contador</Form.Label>\r\n                  <Form.Control onChange={handleChange} value={state.contNome} id=\"contNome\" required type=\"text\" />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col xs={4}>\r\n                <Form.Group>\r\n                  <Form.Label>Email do Contador</Form.Label>\r\n                  <Form.Control onChange={handleChange} value={state.contEmail} id=\"contEmail\" required type=\"text\" />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col xs={4}>\r\n                <Form.Group>\r\n                  <Form.Label>CRC do contador*</Form.Label>\r\n                  <Form.Control onChange={handleChange} value={state.contCrc} id=\"contCrc\" required type=\"nunber\" />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Card>\r\n      </Container>\r\n    case 2:\r\n      return (\r\n        <div className={classes.root}>\r\n          {/* {console.log(municipios)} */}\r\n          <React.Fragment>\r\n\r\n            <Container maxWidth=\"md\">\r\n              {/* <h3>Endereço</h3> */}\r\n              <Card.Title>Endereço</Card.Title>\r\n              <br />\r\n              <form className={classes.root} noValidate autoComplete=\"off\">\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"flex-start\"\r\n                  alignItems=\"flex-start\"\r\n                >\r\n\r\n                  <Form.Group className={classes.formControl}>\r\n                    <Form.Label>CEP</Form.Label>\r\n                    <Form.Control id=\"cep\" onChange={handleChange} onKeyUp={typingCep} onBlur={handleblurCep} value={state.cep} required type=\"text\" />\r\n                  </Form.Group>\r\n                  <Form.Group className={classes.formControl}>\r\n                    <Form.Label>Endereço</Form.Label>\r\n                    <Form.Control id=\"endereco\" onChange={handleChange} value={state.endereco} required type=\"text\" />\r\n                  </Form.Group>\r\n                  <Form.Group className={classes.formControl}>\r\n                    <Form.Label>Numero</Form.Label>\r\n                    <Form.Control id=\"enderecoNumero\" onChange={handleChange} value={state.enderecoNumero} required type=\"number\" />\r\n                  </Form.Group>\r\n\r\n                </Grid>\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"flex-start\"\r\n                  alignItems=\"flex-start\"\r\n                >\r\n                  <Form.Group className={classes.formControl}>\r\n                    <Form.Label>Complemento</Form.Label>\r\n                    <Form.Control id=\"enderecoComplemento\" onChange={handleChange} value={state.enderecoComplemento} required type=\"text\" />\r\n                  </Form.Group>\r\n                  <Form.Group className={classes.formControl}>\r\n                    <Form.Label>Bairro</Form.Label>\r\n                    <Form.Control id=\"bairro\" onChange={handleChange} value={state.bairro} required type=\"text\" />\r\n                  </Form.Group>\r\n\r\n\r\n                </Grid>\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"flex-start\"\r\n                  alignItems=\"flex-start\"\r\n                >\r\n                  {/* <FormControl className={classes.formControl}>\r\n                    <select value={state.uf}>\r\n                      <option value=\"Recife\">Recife</option>\r\n                      <option value=\"Olinda\">Olinda</option>\r\n                      <option value=\"São Paulo\">São Paulo</option>\r\n                    </select>\r\n                  </FormControl> */}\r\n                  {/* <FormControl className={classes.formControl}>\r\n                    <select id=\"cidade\" onChange={(e) => setcidade(e.target.value)} value={cidade}>\r\n                      {municipios.map((cidade) => {\r\n                        return <MenuItem labelId=\"demo-simple-select-label\" key={cidade.id} value={cidade.nome}>{cidade.nome}</MenuItem>\r\n                      })}\r\n                    </select>\r\n                  </FormControl> */}\r\n\r\n\r\n\r\n                  <FormControl className={classes.formControl}>\r\n                    <InputLabel>UF</InputLabel>\r\n                    <Select\r\n\r\n                      id=\"uf\"\r\n                      name=\"uf\"\r\n                      value={state.uf}\r\n                      onChange={handleUf}\r\n                    // onChange={handleChange}\r\n                    > {estados.map((uf, index) => {\r\n                      return <MenuItem id=\"uf\" key={index} value={uf.sigla}>{uf.sigla}</MenuItem>\r\n                    })}\r\n                    </Select>\r\n                  </FormControl>\r\n                  {/* <FormControl className={classes.formControl}>\r\n                    <select value={endereco.city}>\r\n                     {municipios.map((cidade)=>)}\r\n                  </FormControl> */}\r\n                  <FormControl className={classes.formControl}>\r\n                    <InputLabel>Município</InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"cidade\"\r\n                      value={cidade}\r\n                      // onChange={(e) => setcidade(e.target.value)}\r\n                      // name=\"city\"\r\n                      onChange={handleCity}\r\n                    >\r\n                      {municipios.map((city, index) => {\r\n                        return <MenuItem id=\"cidade\" key={index} value={city.nome}>{city.nome}</MenuItem>\r\n                      })}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                {/* {endereco.cidade}\r\n                <input type=\"text\" onChange={(e) => setcidade(e.target.value)} value={cidade} /> */}\r\n              </form>\r\n            </Container>\r\n          </React.Fragment>\r\n        </div>\r\n      );\r\n    case 3:\r\n\r\n      return (\r\n        <div className={classes.root}>\r\n          {/* {console.log(municipios)} */}\r\n          <React.Fragment>\r\n\r\n            <Container maxWidth=\"md\">\r\n              <Card.Title>Operadoras</Card.Title>\r\n              <form className={classes.root} noValidate autoComplete=\"off\">\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"flex-start\"\r\n                  alignItems=\"flex-start\"\r\n                >\r\n\r\n                  <FormControl className={classes.formControl}>\r\n                    <Form.Label>Operadora</Form.Label>\r\n                    <select id=\"idadquirente\" onChange={handleOperadora} className=\"form-select\" aria-label=\"Default select example\">\r\n                      {adquirentes.map((adq, index) => {\r\n                        return <option key={index} value={adq.id}>{adq.nome}</option>\r\n                      })}\r\n                    </select>\r\n                  </FormControl>\r\n\r\n                  <FormControl className={classes.formControl}>\r\n                    <Form.Label>Tecnologia</Form.Label>\r\n                    <select id=\"idtecnologi\" onChange={handleOperadora} className=\"form-select\" aria-label=\"Default select example\">\r\n                      {tecnologias.map((tec, index) => {\r\n                        return <option key={index} value={tec.id}>{tec.nome}</option>\r\n                      })}\r\n                    </select>\r\n                  </FormControl>\r\n                  {operadora.idtecnologi == 2 || operadora.idtecnologi == 3 ?\r\n                    <FormControl className={classes.formControl}>\r\n                      <Form.Label>Provedor</Form.Label>\r\n                      <select aria-label=\"Default select example\" id=\"outros\" onChange={handleOperadora} className=\"form-select\" aria-label=\"Default select example\">\r\n                        {provedores.map((outro, index) => {\r\n                          return <option key={index} value={outro.id}>{outro.nome}</option>\r\n                        })}\r\n                      </select>\r\n                    </FormControl>\r\n                    : ''}\r\n\r\n                  {operadora.idtecnologi == 2 || operadora.idtecnologi == 3 ?\r\n                    <FormControl className={classes.formControl}>\r\n                      <Form.Label>Tipo de Pin Pad</Form.Label>\r\n                      <select id=\"pinpad\" name=\"pinpad\" onChange={handleOperadora} className=\"form-select\" aria-label=\"Default select example\">\r\n                        {pinPads.map((tec, index) => {\r\n                          return <option key={index} value={tec}>{tec}</option>\r\n                        })}\r\n                      </select>\r\n                    </FormControl>\r\n                    : ''}\r\n\r\n                  {operadora.idtecnologi == 2 || operadora.idtecnologi == 3 ?\r\n                    <FormControl className={classes.formControl}>\r\n                      <Form.Label>Pin Pad fist Data</Form.Label>\r\n                      <select id=\"firstData\" name=\"firstData\" onChange={handleOperadora} className=\"form-select\" aria-label=\"Default select example\">\r\n                        {firstData.map((tec, index) => {\r\n                          return <option key={index} value={tec}>{tec}</option>\r\n                        })}\r\n                      </select>\r\n                    </FormControl>\r\n                    : ''}\r\n\r\n                  {operadora.idtecnologi == 2 || operadora.idtecnologi == 3 ?\r\n                    <FormControl className={classes.formControl}>\r\n                      <Form.Label>Posto</Form.Label>\r\n                      <select id=\"posto\" name=\"posto\" onChange={handleOperadora} className=\"form-select\" aria-label=\"Default select example\">\r\n                        {yesOrNo.map((tec, index) => {\r\n                          return <option key={index} value={tec}>{tec}</option>\r\n                        })}\r\n                      </select>\r\n                    </FormControl>\r\n                    : ''}\r\n\r\n                  {operadora.idtecnologi == 2 || operadora.idtecnologi == 3 ?\r\n                    <FormControl className={classes.formControl}>\r\n                      <Form.Label>Good Card</Form.Label>\r\n\r\n                      <select id=\"goodCard\" name=\"goodCard\" onChange={handleOperadora} className=\"form-select\" aria-label=\"Default select example\">\r\n                        {yesOrNo.map((tec, index) => {\r\n                          return <option key={index} value={tec}>{tec}</option>\r\n                        })}\r\n                      </select>\r\n\r\n                    </FormControl>\r\n                    : ''}\r\n                </Grid>\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"flex-start\"\r\n                  alignItems=\"flex-start\"\r\n                >\r\n\r\n                  {/* <Button onClick={handleAdq}>Adicionar</Button> */}\r\n\r\n                </Grid>\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"flex-start\"\r\n                  alignItems=\"flex-start\"\r\n                >\r\n\r\n                  <Form.Group className={classes.formControl}>\r\n                    <Form.Label >Quantidade</Form.Label>\r\n                    <Form.Control value={operadora.qtde} id=\"qtde\" onChange={handleOperadora} required type=\"text\" />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group className={classes.formControl}>\r\n                    <Form.Label>Faturamento Médio</Form.Label>\r\n                    <Form.Control value={operadora.faturamentoMedio} id=\"faturamentoMedio\" onChange={handleOperadora} required type=\"text\" />\r\n                  </Form.Group>\r\n\r\n                  <Form.Group className={classes.formControl}>\r\n                    <Form.Label>Modelo do Pin Pad</Form.Label>\r\n                    <Form.Control value={operadora.pinpadModelo} id=\"pinpadModelo\" onChange={handleOperadora} required type=\"text\" />\r\n                  </Form.Group>\r\n\r\n\r\n                </Grid>\r\n                {/* {endereco.cidade}\r\n                <input type=\"text\" onChange={(e) => setcidade(e.target.value)} value={cidade} /> */}\r\n              </form>\r\n              <div className=\"checkbox\">\r\n                <Checkbox\r\n                  required\r\n                  checked={checked}\r\n                  onChange={handleChangeChecked}\r\n                  inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n                />\r\n                <span htmlFor=\"\">\r\n                  Li e aceito os{\" \"}\r\n                  <Link onClick={handleClickOpen}>termos de uso</Link>\r\n                </span>\r\n              </div>\r\n              <Dialog\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"alert-dialog-title\"\r\n                aria-describedby=\"alert-dialog-description\"\r\n                className={{ dialogBox: classes.dialogBox }}\r\n              >\r\n                <DialogTitle id=\"alert-dialog-title\">\r\n                  {\"Termos de Uso\"}\r\n                </DialogTitle>\r\n                <DialogContent >\r\n                  <DialogContentText id=\"alert-dialog-description\">\r\n                    <Typography variant=\"h6\" className={classes.title}>\r\n                      AUTORIZAÇÃO PARA CONSULTA ÀS INFORMAÇÕES REFERENTES ÀS\r\n                      OPERAÇÕES FINANCEIRAS EFETUADAS COM CARTÕES DE CRÉDITO E\r\n                      DÉBITO\r\n                    </Typography>\r\n                    <Typography className={classes.paragraph}>\r\n                      Autorizo o <b>MUNICÍPIO DE XXXXX</b>, diretamente e/ou\r\n                      através de pessoa jurídica contratada/conveniada, a\r\n                      efetuar consultas e registros sobre informações\r\n                      referentes a operações financeiras efetuadas com cartões\r\n                      de crédito e débito junto a operadoras de cartões de\r\n                      crédito e débito, com o fim de operacionalização da\r\n                      solução ISS Para todos (issparatodos.com.br).\r\n                    </Typography>\r\n                    <Typography className={classes.paragraph}>\r\n                      O autorizante declara-se ciente de que:\r\n                    </Typography>\r\n                    <Typography className={classes.paragraph}>\r\n                      <b>A)</b> A solução ISS para Todos é constituída por\r\n                      informações relacionadas a operações financeiras\r\n                      realizadas com cartões de crédito e débito por tomadores\r\n                      de serviços domiciliados no Município junto a operadoras\r\n                      de cartões de crédito e débito, com o intuito de\r\n                      apuração do valor do ISSQN devido pelas operadoras de\r\n                      cartões de crédito e débito, nos moldes da Lei\r\n                      Complementar Federal nº. 175, de 23 de setembro de 2020,\r\n                      e legislação correlata, sobretudo municipal;\r\n                    </Typography>\r\n                    <Typography className={classes.paragraph}>\r\n                      <b>B)</b> A solução ISS para Todos não constitui\r\n                      cadastro de inadimplência tributária dos tomadores de\r\n                      serviços domiciliados no Município; e\r\n                    </Typography>\r\n                    <Typography className={classes.paragraph}>\r\n                      <b>C)</b> Pode consultar as informações obtidas mediante\r\n                      acesso ao sítio eletrônico issparatodos.com.br, podendo,\r\n                      inclusive, solicitar correção ou exclusão de eventuais\r\n                      inconformidades que entender existentes, estando,\r\n                      contudo, a solicitação sujeita a análise, que resultará\r\n                      no acolhimento total ou parcial ou desacolhimento.\r\n                    </Typography>\r\n                  </DialogContentText>\r\n                </DialogContent>\r\n\r\n                <DialogActions>\r\n                  <div className=\"checkbox\">\r\n                    <Checkbox\r\n                      required\r\n                      checked={checked}\r\n                      onChange={handleChangeChecked}\r\n                      inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n                    />\r\n                    {/* <span htmlFor=\"\">Li e aceito os termos de uso</span> */}\r\n                  </div>\r\n\r\n                  {checked ? (\r\n                    <Button\r\n                      onClick={handleClose}\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                    >\r\n                      Ok\r\n                    </Button>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </DialogActions>\r\n              </Dialog>\r\n            </Container>\r\n\r\n          </React.Fragment>\r\n\r\n        </div>\r\n      );\r\n\r\n    case 4:\r\n      return (\r\n        <div className={classes.root}>\r\n          <React.Fragment>\r\n            <Container maxWidth=\"md\">\r\n              <div className=\"flex-div\">\r\n                <h6>\r\n                  <b>Documentação Comprobatória (Para moderação)</b>\r\n                </h6>\r\n                <label style={{ marginLeft: \"20px\" }}>\r\n                  Envie ao menos um documento para prosseguir com o cadastro\r\n                </label>\r\n              </div>\r\n              <div className=\"flex-div\">\r\n                <div className=\"itens\">\r\n                  <h6>Contrato Social</h6>\r\n                  <Button\r\n\r\n                    variant=\"contained\"\r\n                    component=\"label\"\r\n                    color=\"secondary\"\r\n                    onChange={selectFile}\r\n                  >\r\n                    <input name=\"filepond\" id=\"contratoSocial\" type=\"file\" />\r\n                  </Button>\r\n                </div>\r\n                <div className=\"itens\">\r\n                  <h6>Documento oficial com foto</h6>\r\n\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    component=\"label\"\r\n                    color=\"secondary\"\r\n                    onChange={selectFile}\r\n                  >\r\n                    <input name=\"filepond\" id=\"documentoOficial\" type=\"file\" />\r\n                  </Button>\r\n                </div>\r\n                <div className=\"itens\">\r\n                  <h6>CPF</h6>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    component=\"label\"\r\n                    color=\"secondary\"\r\n                    onChange={selectFile}\r\n                  >\r\n                    <input name=\"filepond\" id=\"cnpjcpf\" type=\"file\" />\r\n                  </Button>\r\n                </div>\r\n                <div className=\"itens\">\r\n                  <Button\r\n\r\n                    variant=\"contained\"\r\n                    component=\"label\"\r\n                    color=\"primary\"\r\n                    onClick={upload}\r\n                  >\r\n                    Upload\r\n                  </Button>\r\n                </div>\r\n                <div>\r\n                  {message === 'Arquivo enviado' ? <Alert severity=\"success\">Arquivo enviado</Alert> : ''}\r\n                </div>\r\n\r\n                <div className=\"checkbox\">\r\n                  <Checkbox\r\n                    required\r\n                    checked={checked}\r\n                    onChange={handleChangeChecked}\r\n                    inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n                  />\r\n                  <span htmlFor=\"\">\r\n                    Li e aceito os{\" \"}\r\n                    <Link onClick={handleClickOpen}>termos de uso</Link>\r\n                  </span>\r\n                </div>\r\n\r\n                <Dialog\r\n                  open={open}\r\n                  onClose={handleClose}\r\n                  aria-labelledby=\"alert-dialog-title\"\r\n                  aria-describedby=\"alert-dialog-description\"\r\n                  className={{ dialogBox: classes.dialogBox }}\r\n                >\r\n                  <DialogTitle id=\"alert-dialog-title\">\r\n                    {\"Termos de Uso\"}\r\n                  </DialogTitle>\r\n                  <DialogContent >\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                      <Typography variant=\"h6\" className={classes.title}>\r\n                        AUTORIZAÇÃO PARA CONSULTA ÀS INFORMAÇÕES REFERENTES ÀS\r\n                        OPERAÇÕES FINANCEIRAS EFETUADAS COM CARTÕES DE CRÉDITO E\r\n                        DÉBITO\r\n                      </Typography>\r\n                      <Typography className={classes.paragraph}>\r\n                        Autorizo o <b>MUNICÍPIO DE XXXXX</b>, diretamente e/ou\r\n                        através de pessoa jurídica contratada/conveniada, a\r\n                        efetuar consultas e registros sobre informações\r\n                        referentes a operações financeiras efetuadas com cartões\r\n                        de crédito e débito junto a operadoras de cartões de\r\n                        crédito e débito, com o fim de operacionalização da\r\n                        solução ISS Para todos (issparatodos.com.br).\r\n                      </Typography>\r\n                      <Typography className={classes.paragraph}>\r\n                        O autorizante declara-se ciente de que:\r\n                      </Typography>\r\n                      <Typography className={classes.paragraph}>\r\n                        <b>A)</b> A solução ISS para Todos é constituída por\r\n                        informações relacionadas a operações financeiras\r\n                        realizadas com cartões de crédito e débito por tomadores\r\n                        de serviços domiciliados no Município junto a operadoras\r\n                        de cartões de crédito e débito, com o intuito de\r\n                        apuração do valor do ISSQN devido pelas operadoras de\r\n                        cartões de crédito e débito, nos moldes da Lei\r\n                        Complementar Federal nº. 175, de 23 de setembro de 2020,\r\n                        e legislação correlata, sobretudo municipal;\r\n                      </Typography>\r\n                      <Typography className={classes.paragraph}>\r\n                        <b>B)</b> A solução ISS para Todos não constitui\r\n                        cadastro de inadimplência tributária dos tomadores de\r\n                        serviços domiciliados no Município; e\r\n                      </Typography>\r\n                      <Typography className={classes.paragraph}>\r\n                        <b>C)</b> Pode consultar as informações obtidas mediante\r\n                        acesso ao sítio eletrônico issparatodos.com.br, podendo,\r\n                        inclusive, solicitar correção ou exclusão de eventuais\r\n                        inconformidades que entender existentes, estando,\r\n                        contudo, a solicitação sujeita a análise, que resultará\r\n                        no acolhimento total ou parcial ou desacolhimento.\r\n                      </Typography>\r\n                    </DialogContentText>\r\n                  </DialogContent>\r\n\r\n                  <DialogActions>\r\n                    <div className=\"checkbox\">\r\n                      {/* <Checkbox\r\n                        required\r\n                        checked={checked}\r\n                        onChange={handleChangeChecked}\r\n                        inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n                      />\r\n                      <span htmlFor=\"\">Li e aceito os termos de uso</span> */}\r\n                    </div>\r\n\r\n                    {checked ? (\r\n                      <Button\r\n                        onClick={handleClose}\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                      >\r\n                        Ok\r\n                      </Button>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </DialogActions>\r\n                </Dialog>\r\n                {/* </Grid> */}\r\n              </div>\r\n              <hr />\r\n              <div className={classes.alert}>\r\n                {enableMessageSucess === true ? (\r\n                  <Alert severity=\"success\">\r\n                    Cadastro finalizado com sucesso!\r\n                  </Alert>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              {enableMessageErro === true ? (\r\n                  <Alert severity=\"error\">\r\n                    O cadastro não foi realizado, por favor verifique informações.\r\n                  </Alert>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </div>\r\n            </Container>\r\n          </React.Fragment>\r\n        </div>\r\n      );\r\n    case 5:\r\n      return <div >\r\n\r\n        <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{\"Termos de Uso\"}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n\r\n              <Typography variant=\"h6\" className={classes.title}>\r\n                AUTORIZAÇÃO PARA CONSULTA ÀS INFORMAÇÕES REFERENTES ÀS OPERAÇÕES\r\n                FINANCEIRAS EFETUADAS COM CARTÕES DE CRÉDITO E DÉBITO\r\n              </Typography>\r\n              <Typography className={classes.paragraph}>\r\n                Autorizo o <b>MUNICÍPIO DE XXXXX</b>, diretamente e/ou através de pessoa jurídica contratada/conveniada, a efetuar consultas e registros sobre informações referentes a operações financeiras efetuadas com cartões de crédito e débito junto a operadoras de cartões de crédito e débito, com o fim de operacionalização da solução ISS Para todos (issparatodos.com.br), por intermédio, especialmente – mas não somente –, do envio de formulários de rotina deste decorrentes.\r\n              </Typography>\r\n              <Typography className={classes.paragraph}>\r\n                <b>A)</b> A solução ISS para Todos é constituída por informações relacionadas a operações financeiras realizadas com cartões de crédito e débito por tomadores de serviços domiciliados no Município junto a operadoras de cartões de crédito e débito, com o intuito de apuração do valor do ISSQN devido pelas operadoras de cartões de crédito e débito, nos moldes da Lei Complementar Federal nº. 175, de 23 de setembro de 2020, e legislação correlata, sobretudo municipal;\r\n              </Typography>\r\n              <Typography className={classes.paragraph}>\r\n                <b>B)</b> A solução ISS para Todos não constitui cadastro de inadimplência tributária dos tomadores de serviços domiciliados no Município; e\r\n              </Typography>\r\n              <Typography className={classes.paragraph}>\r\n                <b>C)</b> Pode consultar as informações obtidas mediante acesso ao sítio eletrônico issparatodos.com.br, podendo, inclusive, solicitar correção ou exclusão de eventuais inconformidades que entender existentes, estando, contudo, a solicitação sujeita a análise, que resultará no acolhimento total ou parcial ou desacolhimento\r\n              </Typography>\r\n\r\n            </DialogContentText>\r\n          </DialogContent>\r\n\r\n          <DialogActions>\r\n\r\n\r\n            <div className=\"checkbox\">\r\n              <Checkbox required checked={checked} onChange={handleChangeChecked} inputProps={{ 'aria-label': 'primary checkbox' }} />\r\n              <span htmlFor=\"\">Li e aceito os termos de uso</span>\r\n            </div>\r\n\r\n            {checked ?\r\n              <Button onClick={handleClose} variant=\"outlined\" color=\"primary\">\r\n                Ok\r\n              </Button> : ''}\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    default:\r\n      return '';\r\n  }\r\n}\r\n\r\nexport default function HorizontalLabelPositionBelowStepper() {\r\n\r\n  const classes = useStyles();\r\n  const [municipios, setMunicipios] = useState([])\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [estados, setEstados] = useState(['PE', 'SP'])\r\n  const [cidade, setcidade] = useState()\r\n  const [operadoras, setOperadoras] = useState([])\r\n\r\n  const [endereco, setEndereco] = useState({\r\n    cep: \"\",\r\n    uf: \"\",\r\n    cidade: cidade,\r\n    bairro: \"\",\r\n    endereco: \"\",\r\n    enderecoNumero: '',\r\n    enderecoComplemento: \"\",\r\n  })\r\n  useEffect(() => {\r\n    axios.get('https://servicodados.ibge.gov.br/api/v1/localidades/estados').then(data => {\r\n      setEstados(data.data)\r\n    })\r\n  }, []\r\n  )\r\n\r\n  const [enableMessageSucess, setenableMessageSuccess] = useState(null)\r\n  const [enableMessageErro, setEnableMessageErro] = useState(null)\r\n  const [isValidCPF, setisValidCPF] = useState(null)\r\n  const [cnpjIsMaceio, setCnpjIsMaceio] = useState(null)\r\n  const [cnpjExistInDatabase, setCnpjExistInDatabase] = useState(null)\r\n  const [disableBtnNext, setdisableBtnNext] = useState(true)\r\n  const [disableTermUser, setdisableTermUser] = useState(true)\r\n\r\n  const [city, setCity] = useState(municipios[0])\r\n\r\n  const [state, setState] = useState({\r\n    email: '',\r\n    cnpjcpf: '',\r\n    nome: '',\r\n    senha: '',\r\n    razaoSocial: '',\r\n    nomeFantasia: '',\r\n    ie: '',\r\n    im: '',\r\n    iptu: '',\r\n    respNome: '',\r\n    respEmail: '',\r\n    respCpf: '',\r\n    respTelefone: '',\r\n    respCelular: '',\r\n    contNome: '',\r\n    contEmail: '',\r\n    contCrc: '',\r\n    cep: \"\",\r\n    uf: \"\",\r\n    cidade: cidade,\r\n    bairro: \"\",\r\n    endereco: \"\",\r\n    enderecoNumero: '',\r\n    enderecoComplemento: \"\",\r\n    adquirentes: [{\r\n      idtefprovedor: 1,\r\n      idadquirente: 1,\r\n      outros: \"\",\r\n      idtecnologia: 1,\r\n      outrostecnologia: \"\",\r\n      pinpad: \"Proprio\",\r\n      pinpadModelo: \"1111\",\r\n      posto: \"N\",\r\n      goodCard: \"N\",\r\n      firstData: \"USB\",\r\n      qtde: 1,\r\n      faturamentoMedio: 1000.00\r\n    }],\r\n    // operadoras: [\r\n    //   {\r\n    //     idadquirente: 1,\r\n    //     idtecnologi: 1,\r\n    //     outros: \"\",\r\n    //     qtde: 1,\r\n    //     faturamentoMedio: 1000.00\r\n    //   }\r\n    // ]\r\n  })\r\n\r\n  //USE EFFECT PARA CONSUMIR E DEFINIR HOOKS\r\n  useEffect(() => {\r\n    axios.get(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${endereco.uf}/municipios`).then(data => {\r\n      setMunicipios(data.data)\r\n    })\r\n  }, [endereco.uf])\r\n\r\n  useEffect(() => {\r\n    axios.get(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${endereco.uf}/municipios`).then(data => {\r\n      setMunicipios(data.data)\r\n\r\n      // console.log(data.data)\r\n    })\r\n  }, [endereco.uf])\r\n\r\n\r\n  //get adquirentes\r\n  const [adquirentes, setAdquirentes] = useState([])\r\n  useEffect(() => {\r\n    ApiService.get('/adquirentes').then(req => {\r\n      setAdquirentes(req.data.data)\r\n    }).catch(error => {\r\n      console.log(error)\r\n    })\r\n  }, [])\r\n\r\n  //get tecnologias\r\n  const [tecnologias, setTecnologias] = useState([])\r\n  useEffect(() => {\r\n    ApiService.get('/tecnologias').then(req => {\r\n      setTecnologias(req.data.data)\r\n    }).catch(error => {\r\n      console.log(error)\r\n    })\r\n  }, [])\r\n\r\n  //get provedores\r\n  const [provedores, setProvedores] = useState([])\r\n  useEffect(() => {\r\n    ApiService.get('/tefprovedores').then(req => {\r\n      setProvedores(req.data.data)\r\n      console.log(\"provedores: \" + req.data.data)\r\n    }).catch(error => {\r\n      console.log(error)\r\n    })\r\n  }, [])\r\n\r\n\r\n  //tipos de pinPads\r\n  const [pinPads, setPinPads] = useState([\r\n    'Proprio',\r\n    'Terceiro'\r\n  ])\r\n\r\n  //tipos de pinPads\r\n  const [firstData, setfirstData] = useState([\r\n    'USB',\r\n    'SERIAL'\r\n  ])\r\n\r\n  //sim ou nao\r\n  const [yesOrNo, setYesOrNo] = useState([\r\n    'Sim',\r\n    'Não'\r\n  ])\r\n\r\n\r\n  //TermoDeLicença\r\n  const [open, setOpen] = React.useState(false);\r\n  const [checked, setChecked] = React.useState(false);\r\n  const [onBlurCep, setOnblurCep] = useState(false);\r\n  const [onBlurCpf, setOnBlurCpf] = useState(false)\r\n \r\n\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleChangeChecked = (event) => {\r\n    setChecked(event.target.checked);\r\n  };\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target\r\n    setState(prevState => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }))\r\n    // console.log(state)\r\n  }\r\n  function handleBlurCep() {\r\n    setOnblurCep(true)\r\n    var cidade = state.cidade\r\n    // console.log('saiu')\r\n    getCities(state.uf)\r\n    setcidade(cidade)\r\n    // getCep()\r\n  }\r\n\r\n\r\n  const [operadora, setOperadora] = useState({\r\n    idadquirente: 0,\r\n    idtecnologi: 0,\r\n    outros: \"\",\r\n    qtde: 0,\r\n    faturamentoMedio: 0,\r\n    pinpadModelo: ''\r\n\r\n  })\r\n\r\n  function handleOperadora(e) {\r\n    const { id, value } = e.target\r\n    setOperadora(prevState => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }))\r\n    // console.log(e.target.value)\r\n  }\r\n\r\n  function handleAdq(e) {\r\n    console.log(operadora)\r\n    setOperadoras([...operadoras, operadora])\r\n    state.operadoras.push(operadora)\r\n    console.log(operadoras)\r\n\r\n  }\r\n\r\n  function handleUf(e) {\r\n    setState((prevState => ({\r\n      ...prevState,\r\n      uf: e.target.value || null\r\n    })))\r\n    getCities(e.target.value)\r\n\r\n  }\r\n\r\n  function handleCity(e) {\r\n    setcidade(e.target.value)\r\n    console.log(state.cidade);\r\n    setState(prevstate => ({\r\n      ...prevstate,\r\n      cidade: e.target.value\r\n    }))\r\n    console.log(state)\r\n\r\n  }\r\n\r\n  function getCities(uf) {\r\n    axios.get(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${uf}/municipios`).then(data => {\r\n      setMunicipios(data.data)\r\n    })\r\n    // console.log(municipios)\r\n  }\r\n\r\n  function getCep() {\r\n    axios.get(`https://viacep.com.br/ws/${state.cep}/json/`).then(res => {\r\n      getCities(res.data.uf)\r\n      setcidade(res.data.localidade)\r\n      setState((prevState => ({\r\n        ...prevState,\r\n        cep: state.cep,\r\n        uf: res.data.uf,\r\n        cidade: res.data.localidade,\r\n        bairro: res.data.bairro,\r\n        endereco: res.data.logradouro\r\n      })))\r\n    }).catch(erro => console.log(erro))\r\n    // getCities()\r\n    // console.log(state)\r\n  }\r\n\r\n  function handleChangeCep(e) {\r\n    const { id, value } = e.target\r\n    setEndereco(prevState => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }))\r\n\r\n  }\r\n  function typingCep() {\r\n    if (state.cep.length === 8) {\r\n      getCep()\r\n    }\r\n  }\r\n\r\n  const [municipioCnpj, setmunicipioCnpj] = useState({\r\n    uf: '',\r\n    cidade: ''\r\n  })\r\n  const [validatemunicipioCnpj, setValidatemunicipioCnpj] = useState(false)\r\n\r\n  //Tira os caracteres do CEP\r\n  function modifyCep(cep) {\r\n    cep = cep.replace(/[.]+/g, '').replace(/[-]+/g, '');\r\n    console.log(cep)\r\n    return cep\r\n  }\r\n  //Coloca em minusculo com a primeira letra maiuscula\r\n  function modifyCity(city) {\r\n    console.log(city)\r\n    city = city.toLowerCase()\r\n    city = city.replace(/[m]+/g, 'M').replace(/[o]+/g, 'ó')\r\n    console.log(city)\r\n    return city\r\n  }\r\n\r\n  function getPhone(phone){\r\n    var end = 0\r\n    var phone1 = phone\r\n    var phone2 = ''\r\n    for (let index = 0; index < phone.length; index++) {\r\n      if(phone[index] === '/'){\r\n        phone1 = phone.slice(0, index)\r\n        setState((prevState=>({\r\n          ...prevState,\r\n          respCelular: phone2\r\n        })))\r\n        phone2 = phone.slice(index + 1, phone.length)\r\n      }\r\n    }\r\n    return phone1\r\n  }\r\n\r\n  //função para validar se o cpf jã não está cadastrado\r\n  function getCpf(_cpf) {\r\n    console.log('entrou em getCpf')\r\n    ApiService.get(`/valida/estabelecimentos/${_cpf}`).then(req => {\r\n      console.log(req.data)\r\n      if (req.data.isValid) {\r\n        console.log('Valido :' + req.data.isValid)\r\n        setdisableBtnNext(false) \r\n      }\r\n      setisValidCPF(req.data.isValid)\r\n    }).catch(error => {\r\n      console.log('OCORREU UM ERRO')\r\n      isValidCPF = false;\r\n    })\r\n  }\r\n\r\n  //valida se o CNPJ é de Maceio\r\n  function getCnpj() {\r\n    setCnpjExistInDatabase(null)\r\n      ApiService.get(`/consultacnpj/${state.cnpjcpf}`).then(res => {\r\n        if (res.data.municipio !== \"MACEIO\") {\r\n          console.log('Não é de maceio: ' + res.data.municipio + validatemunicipioCnpj)\r\n          setCnpjIsMaceio(false)\r\n        } else {\r\n          console.log('é de maceió: ' + res.data.municipio + validatemunicipioCnpj)\r\n          ApiService.get(`/valida/estabelecimentos/${state.cnpjcpf}`).then(req => {\r\n            console.log(req.data)\r\n            if (req.data.isValid) {\r\n              console.log('Valido :' + req.data.isValid)\r\n              setdisableBtnNext(false)\r\n              setCnpjIsMaceio(true)\r\n            }else{\r\n              setCnpjExistInDatabase(false)\r\n            }\r\n          }).catch(error => {\r\n            console.log('OCORREU UM ERRO :'+error)\r\n            isValidCPF = false;\r\n      \r\n          })\r\n\r\n          setState((prevState => ({\r\n            ...prevState,\r\n            cep: modifyCep(res.data.cep),\r\n            uf: res.data.uf,\r\n            cidade: modifyCity(res.data.municipio),\r\n            bairro: res.data.bairro,\r\n            endereco: res.data.logradouro,\r\n            enderecoNumero: res.data.numero,\r\n            razaoSocial: res.data.nome,\r\n            respNome:res.data.nome,\r\n            respEmail: res.data.email,\r\n            respTelefone:getPhone(res.data.telefone),\r\n            nomeFantasia:res.data.fantasia,\r\n            email:res.data.email\r\n          })))\r\n          getCities(res.data.uf)\r\n          setcidade(modifyCity(res.data.municipio))\r\n        }\r\n      }).catch(erro => {\r\n        setdisableBtnNext(false)\r\n       // setCnpjIsMaceio(true)\r\n        console.log(\"Erro de cnpj: \" + erro)\r\n      })\r\n      console.log(cidade)\r\n  }\r\n\r\n\r\n  //Tirar função \r\n  function handleCpf() {\r\n    console.log(state.cidade)\r\n    setOnBlurCpf(true)\r\n    getCnpj()\r\n    console.log(state.cidade)\r\n    getCpf(state.cnpjcpf)\r\n  }\r\n\r\n  function existsCpfCnpj() {\r\n    console.log(\"entrou em existsCpf\")\r\n    setisValidCPF(null)\r\n    setCnpjIsMaceio(null)\r\n    setCnpjExistInDatabase(null)\r\n    console.log(state.cnpjcpf.length)\r\n\r\n    if (state.cnpjcpf.length === 11) {\r\n      console.log(\"validou 12 diitos\")\r\n      getCpf(state.cnpjcpf)\r\n\r\n    }\r\n    else if (state.cnpjcpf.length === 14) {\r\n      console.log(\"validou 14 diitos\")\r\n      modifyCep(state.cep)\r\n      getCnpj()\r\n    }\r\n\r\n  }\r\n\r\n  function setEmail() {\r\n    console.log(\"setando email\")\r\n    setState(prevState => ({\r\n      ...prevState,\r\n      email: state.respEmail\r\n    }))\r\n  }\r\n\r\n  const [selectedFiles, setSelectState] = useState({\r\n    contratoSocial: {},\r\n    documentoOficial: {},\r\n    cnpjcpf: {},\r\n  })\r\n\r\n  //states para envio de arquivos\r\n  const [currentFile, setCurrentFile] = useState(undefined)\r\n  const [progress, setProgress] = useState(0)\r\n  const [message, setMessage] = useState(\"\")\r\n  const [fileInfos, setFileInfos] = useState([])\r\n  const [validLogin, setValidLogin] = useState('')\r\n\r\n  //seleciona o arquivo e coloca de acordo com o id do input\r\n  function selectFile(e) {\r\n    const { id, files } = e.target\r\n    setSelectState(\r\n      prevstate => ({\r\n        ...prevstate,\r\n        [id]: files\r\n      }))\r\n  }\r\n\r\n  //funcão chamada de acordo com o botão de Upload\r\n  function upload() {\r\n    console.log('Upload Start')\r\n    sessionStorage.setItem('cnpjcpf', state.cnpjcpf)\r\n    for (var key in selectedFiles) {\r\n      let currentFile = selectedFiles[key];\r\n      UploadService.upload(currentFile, (event) => {\r\n        console.log('Upload do arquivo ' + currentFile)\r\n        setProgress(Math.round((100 * event.loaded) / event.total))\r\n      })\r\n        .then((response) => {\r\n          setMessage('Arquivo enviado')\r\n          console.log(response)\r\n        })\r\n        .then((files) => {\r\n          setFileInfos(files.data)\r\n        })\r\n        .catch((error) => {\r\n          setProgress(0)\r\n\r\n          setMessage(\"Could not upload the file!\")\r\n          setCurrentFile(undefined)\r\n          console.log(\"erro upload\")\r\n          console.log(error)\r\n        });\r\n      console.log(currentFile)\r\n    }\r\n  }\r\n\r\n  //VALIDAR ENDEREÇO PELO CNPJ\r\n  function getAdressCnpj() {\r\n    // validar cidade\r\n    //Api da receita federal\r\n    //consultar e validar cidade no mesmo endereço de acordo com a cidade do cnpj\r\n    ApiService.get('', { headers: { \"Content-Type\": \"application/json\" } }).then(req => {\r\n      municipioCnpj = req.data\r\n    }).catch(erro => {\r\n      console.log('cnpj invalido')\r\n    });\r\n  }\r\n\r\n\r\n  function validateRegister() {\r\n    if (!state.cnpjcpf === '' || state.nome === '' || state.senha === '' || isValidCPF !== true) {\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  function validateEstablishment() {\r\n    if (state.razaoSocial === '' || state.nomeFantasia === '' || state.ie === '' || state.im === '' || state.iptu === '' || state.respCpf === '' || state.respTelefone === '' || state.respCelular === '' || state.respEmail === '' || state.contEmail === '' || state.contNome === '' || state.contCrc === '') {\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  function validateAddress() {\r\n    if (state.cep === '' || state.endereco === '' || state.enderecoNumero === '' || state.uf === '' || state.cidade === '') {\r\n      return false\r\n    }\r\n\r\n    return true\r\n  }\r\n\r\n  function validateOperations() {\r\n    if (operadora.idadquirente === '' || operadora.idtecnologia === '' || operadora.faturamentoMedio === '' || operadora.qtde === '' || operadora.pinpadModelo === '') {\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  //POST DO FORM\r\n  const notify = () => toast(\"Wow so easy !\");\r\n  async function handleSubmit(e) {\r\n    var resEmail = state.respEmail\r\n    notify();\r\n    e.preventDefault()\r\n    toast.success(\"Successfully uploaded\");\r\n    setState(prevState => ({\r\n      ...prevState,\r\n      email: state.respEmail\r\n    }))\r\n\r\n    var dados = JSON.stringify(state)\r\n    console.log(dados)\r\n    await ApiService.post('/estabelecimentos', dados, { headers: { \"Content-Type\": \"application/json\" } }).then(res => {\r\n      console.log(res)\r\n\r\n      if (res.status === 200) {\r\n        const notify = () => toast(\"Sucesso!\");\r\n\r\n        ApiService.post('/sessions', { username: state.cnpjcpf, password: state.senha })\r\n          .then(res => {\r\n            console.log(res.status)\r\n            if (res.status === 200) {\r\n              sessionStorage.setItem('token', res.data.token)\r\n              sessionStorage.setItem('email', state.email)\r\n              setenableMessageSuccess(true)\r\n            }else{\r\n              setEnableMessageErro(true)\r\n            }\r\n          }).catch(error => {\r\n            console.log(error)\r\n          })\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n\r\n      } else {\r\n        const notify = () => toast(\"Erro!\");\r\n        setenableMessageSuccess(false)\r\n\r\n      }\r\n    }).catch(erro => {\r\n      console.log('erro: ' + erro)\r\n      setenableMessageSuccess(false)\r\n    })\r\n  }\r\n\r\n\r\n  const steps = getSteps();\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <Container>\r\n      <Header/>\r\n    <div>\r\n      \r\n      <CssBaseline />\r\n      <Stepper activeStep={activeStep} alternativeLabel>\r\n        {steps.map((label) => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <div >\r\n        {activeStep === steps.length ? (\r\n          <div className={classes.backButton}>\r\n            <Typography className={classes.instructions}>Feito</Typography>\r\n            <Button onClick={handleReset}>Finalizar</Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <form onSubmit={handleSubmit}>\r\n              <div className={classes.instructions}>{getStepContent(activeStep, handleChange, setState, state, estados, municipios, handleChangeChecked, classes, handleClose, checked, handleClickOpen, open, handleChangeCep, \r\n                handleBlurCep, handleUf, handleCity, handleCpf, existsCpfCnpj, setEmail, isValidCPF, cnpjIsMaceio, typingCep, cidade, setcidade, endereco, enableMessageSucess, enableMessageErro,  operadora, handleAdq, operadoras, handleOperadora, adquirentes, tecnologias,\r\n                 provedores, firstData, pinPads, yesOrNo, upload, selectFile, message, cnpjExistInDatabase)}</div>\r\n\r\n              <div className=\"container\">\r\n                <Button\r\n\r\n                  disabled={activeStep === 0}\r\n                  onClick={handleBack}\r\n                  className={classes.backButton}\r\n                >\r\n                  Voltar\r\n                </Button>\r\n                {activeStep === steps.length - 1 ? <Button variant=\"contained\" color=\"primary\">Finalizar</Button> : ''}\r\n                {activeStep === 0 && validateRegister() === true ? <Button variant=\"contained\" color=\"primary\" name=\"btnNext\" onClick={handleNext}>Próximo </Button> : ''}\r\n                {activeStep === 1 && validateEstablishment() ? <Button variant=\"contained\" color=\"primary\" name=\"btnNext\" onClick={handleNext}>Próximo </Button> : ''}\r\n                {activeStep === 2 && validateAddress() ? <Button variant=\"contained\" color=\"primary\" name=\"btnNext\" onClick={handleNext}>Próximo </Button> : ''}\r\n                {activeStep === 3 && validateOperations() && checked ? <Button type=\"submit\" variant=\"contained\" color=\"primary\">Cadastrar</Button> : ''}\r\n\r\n              </div>\r\n            </form>\r\n\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n    </Container>\r\n  );\r\n}","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Row, Col } from 'react-bootstrap'\r\nimport { Button } from 'react-bootstrap';\r\nimport './Dashboard.css'\r\nimport NavBar from \"../NavBar\";\r\n\r\nexport default function Dashboard() {\r\n    const data = []\r\n    const adquirentes = []\r\n    return (\r\n        <React.Fragment>\r\n             \r\n            <Container maxWidth=\"lg\">\r\n            <NavBar /> \r\n                <div>\r\n\r\n                    {/* {data.map((dado, index) => { */}\r\n                        {/* return ( */}\r\n                            <Row className=\"row-info\" >\r\n\r\n                                <Row className=\"col-valores\">\r\n                                    <Col className=\"info\">\r\n                                        <div>\r\n                                            <span>Razão Social</span>\r\n                                            {/* <p>{dado.razaoSocial}</p> */}\r\n                                        </div>\r\n                                    </Col>\r\n                                    <Col className=\"info\">\r\n                                        <div>\r\n                                            <span>Nome Fantasia</span>\r\n                                            {/* <p>{dado.nomeFantasia}</p> */}\r\n                                        </div>\r\n                                    </Col>\r\n                                    <Col className=\"info\">\r\n                                        <div>\r\n                                            <span>Cpf/Cnpj</span>\r\n                                            {/* <p>{dado.cpf_cnpj}</p> */}\r\n                                        </div>\r\n                                    </Col>\r\n                                    <Col className=\"info\">\r\n                                        <div>\r\n                                            <span>Imprimir DIMP</span>\r\n                                            <Button>Vizualizar</Button>\r\n                                        </div>\r\n                                    </Col>\r\n                                    <Col className=\"info\">\r\n                                        <div>\r\n                                            <span>Extrato</span>\r\n\r\n                                            <Button>Vizualizar</Button>\r\n                                        </div>\r\n                                    </Col>\r\n                                </Row>\r\n\r\n                            </Row>\r\n                        {/* ) */}\r\n                    {/* })} */}\r\n                    <span>Adquirentes</span>\r\n                    {/* {adquirentes.map((adquirente) => { */}\r\n                        {/* return ( */}\r\n                            <Row>\r\n                                <Col>\r\n                                    {/* {adquirente.nome} */}\r\n                                </Col>\r\n                            </Row>\r\n                        {/* ) */}\r\n                    {/* })} */}\r\n                    <h3>\r\n                        Adquirentes\r\n                    </h3>\r\n                    {/* {adquirentes.map((adquirente) => { */}\r\n                        {/* return ( */}\r\n                            <Row>\r\n\r\n                                <Col className=\"adquirente-info\">\r\n                                    Stone\r\n                                    {/* {adquirente.stone} */}\r\n\r\n                                </Col>\r\n                                <Col className=\"adquirente-info\">\r\n\r\n                                    Adiq\r\n                                    {/* {adquirente.Adiq} */}\r\n\r\n                                </Col>\r\n                                <Col className=\"adquirente-info\">\r\n\r\n                                     <span>Cielo</span>\r\n                                    {/* {adquirente.cielo} */}\r\n\r\n                                </Col>\r\n                                <Col className=\"adquirente-info\">\r\n\r\n                                     <span>Rede</span>\r\n                                    {/* {adquirente.Rede} */}\r\n\r\n                                </Col>\r\n                                <Col className=\"adquirente-info\">\r\n\r\n                                     <span>Pagseguro</span>\r\n                                    {/* {adquirente.pagSeguro} */}\r\n\r\n                                </Col>\r\n                                <Col className=\"adquirente-info\">\r\n\r\n                                     <span>GlobalPayments</span>\r\n                                    {/* {adquirente.globalPayments} */}\r\n\r\n                                </Col>\r\n\r\n                            </Row>\r\n                        {/* ) */}\r\n                    {/* })} */}\r\n\r\n                </div>\r\n            </Container>\r\n        </React.Fragment>\r\n    );\r\n}\r\n","import { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles ( (theme) =>({\r\n    \r\n    textHeader: {\r\n        padding: '20px 20px',\r\n    },\r\n\r\n    bodyTable : {\r\n        padding: '20px 20px',\r\n        width: '100%',\r\n        height: '400px'\r\n    }\r\n\r\n}));\r\n\r\nexport default useStyles;\r\n","import React, { useContext } from 'react';\r\nimport clsx from 'clsx';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport Button from '@material-ui/core/Button';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport ListItem from '@material-ui/core/ListItem';\r\n\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport { Link } from 'react-router-dom';\r\nimport StoreContext from '../../components/Store/Context';\r\n\r\nimport ListAltIcon from '@material-ui/icons/ListAlt';\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp';\r\nimport AllInboxIcon from '@material-ui/icons/AllInbox';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport {ListItemIcon, ListItemText} from '@material-ui/core'\r\nimport logo from '../../Images/LogoSidebar.png'\r\nconst rotas = [\r\n  {\r\n    routeName: 'Perfil',\r\n    path: '/perfil',\r\n    icone:<AllInboxIcon />\r\n  }\r\n  ,\r\n  {\r\n    routeName: 'Dimps',\r\n    path: '/dimps',\r\n    icone:<AllInboxIcon />\r\n  }\r\n\r\n]\r\n\r\nconst useStyles = makeStyles({\r\n  list: {\r\n    width: 240,\r\n  },\r\n  fullList: {\r\n    width: 'auto',\r\n  },\r\n  div_links:{\r\n    marginTop:'25px'\r\n  },\r\n  links: {\r\n    marginTop: '15px',\r\n    marginBottom:'20px',\r\n    padding:'10px'\r\n  },\r\n  paper: {\r\n    position:'relative',\r\n    height: 'calc(100% - 64px)',\r\n    top: 55,\r\n  },\r\n  img:{\r\n    marginLeft:'32px',\r\n    marginBottom:'18px',\r\n    padding:0,\r\n    width:'120px'\r\n  }\r\n  \r\n});\r\n\r\n\r\n\r\nexport default function SideBar() {\r\n  const classes = useStyles();\r\n  const [state, setState] = React.useState({\r\n    top: false\r\n  });\r\n\r\n  const { token ,setToken } = useContext(StoreContext);\r\n\r\n  function logout(){\r\n    console.log(token)\r\n    localStorage.removeItem('token');\r\n    sessionStorage.removeItem('token');\r\n    sessionStorage.clear();\r\n    localStorage.clear();\r\n    setToken(null,null);\r\n  }\r\n\r\n  const toggleDrawer = (anchor, open) => (event) => {\r\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\r\n      return;\r\n    }\r\n\r\n    setState({ ...state, [anchor]: open });\r\n  };\r\n\r\n  const list = (anchor) => (\r\n    <div\r\n    className={classes.paper} \r\n      role=\"presentation\"\r\n      onClick={toggleDrawer(anchor, false)}\r\n      onKeyDown={toggleDrawer(anchor, false)}\r\n    >\r\n      {/* <img src={logo}  className={classes.img} alt=\"logo\" /> */}\r\n      <List>\r\n        {rotas.map((rota, index) => (\r\n          <ListItem className={classes.links} button key={index}>\r\n            <ListItemIcon>{rota.icone}</ListItemIcon>\r\n            <Link to={rota.path} ><ListItemText primary={rota.routeName} /></Link>\r\n          </ListItem>\r\n        ))}\r\n      </List>\r\n      \r\n      <Divider />\r\n      <ListItem> \r\n        <ListItemIcon> <ExitToAppIcon /></ListItemIcon>\r\n        {/* <Link to=\"/\"><ListItemText>Logout</ListItemText></Link> */}\r\n        <button type=\"button\" onClick={() => logout()}>\r\n              Sair\r\n        </button>\r\n      </ListItem>\r\n    </div>\r\n  );\r\n\r\n \r\n  return (\r\n    <div >\r\n      {['left'].map((anchor) => (\r\n        <React.Fragment key={anchor}>\r\n          <Button onClick={toggleDrawer(anchor, true)}>\r\n            <MenuIcon />\r\n          </Button>\r\n          <Drawer style={{ flexShrink: 0}} anchor={anchor} open={state[anchor]} onClose={toggleDrawer(anchor, false)}>\r\n            {list(anchor)}\r\n          </Drawer>\r\n        </React.Fragment>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\n","import React, { useState, useEffect, forwardRef  } from 'react';\r\nimport { Card, Typography, Link, Grid } from '@material-ui/core';\r\nimport useStyles from './Dimps';\r\nimport { ApiService } from '../../service/ApiService'\r\nimport MaterialTable from \"material-table\";\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\n\r\nimport AddBox from '@material-ui/icons/AddBox';\r\nimport ArrowDownward from '@material-ui/icons/ArrowDownward';\r\nimport Check from '@material-ui/icons/Check';\r\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRight from '@material-ui/icons/ChevronRight';\r\nimport Clear from '@material-ui/icons/Clear';\r\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\r\nimport Edit from '@material-ui/icons/Edit';\r\nimport FilterList from '@material-ui/icons/FilterList';\r\nimport FirstPage from '@material-ui/icons/FirstPage';\r\nimport LastPage from '@material-ui/icons/LastPage';\r\nimport Remove from '@material-ui/icons/Remove';\r\nimport SaveAlt from '@material-ui/icons/SaveAlt';\r\nimport Search from '@material-ui/icons/Search';\r\nimport ViewColumn from '@material-ui/icons/ViewColumn';\r\nimport Button from '@material-ui/core/Button';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { Checkbox} from '@material-ui/core';\r\nimport { ViewCarouselTwoTone } from '@material-ui/icons';\r\nimport NavBar from \"../NavBarEstabelecimento\";\r\nimport PrintIcon from '@material-ui/icons/Print';\r\n\r\n\r\n\r\nconst tableIcons = {\r\n    Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\r\n    Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\r\n    Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\r\n    DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\r\n    Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\r\n    Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\r\n    FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\r\n    LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\r\n    NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\r\n    PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\r\n    ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\r\n    Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\r\n    SortArrow: forwardRef((props, ref) => <ArrowDownward {...props} ref={ref} />),\r\n    ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\r\n    ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\r\n  };\r\n\r\n  \r\n  function openInNewTab(url) {\r\n    if(url != null) {\r\n      window.open(url, '_blank').focus();\r\n    }else{\r\n      alert(\"Não é possivel visualizar o DIMP\");\r\n    }\r\n   \r\n   }\r\n\r\nfunction SentFile() {\r\n   //get estabelecimentos\r\n   const [estabelecimentos, setEstabelecimentos] = useState([])\r\n   useEffect(() => {\r\n       ApiService.get('/profile/dimps').then(req => {\r\n        setEstabelecimentos(req.data)\r\n          console.log(\"provedores: \" + req.data)\r\n          setOpen(false);\r\n       }).catch(error => {\r\n          console.log(error)\r\n       })\r\n    }, [])\r\n\r\n    const [estabelecimentoPayload, setEstabelecimentoPayload] = React.useState({\r\n      cnpjcpf: ''\r\n  })\r\n\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n\r\n    const handleClose = () => {\r\n      setOpen(false);\r\n    };\r\n    \r\n    \r\n    const [estabelecimentoRow, setestabelecimentoRow] = useState({\r\n      mes: \"\",\r\n      ano: \"\",\r\n      status:\"\",\r\n      link: \"\"\r\n    })\r\n\r\n      function teste(value){\r\n      setestabelecimentoRow({\r\n        mes: value.mes,\r\n        ano: value.ano,\r\n        status: value.status\r\n      })\r\n\r\n      \r\n      setOpen(true);\r\n    }\r\n\r\n    const handleClickOpen = (teste) => {\r\n      setestabelecimentoRow(teste)\r\n      //setOpen(true);\r\n    };\r\n\r\n  const classes = useStyles();\r\n  return (\r\n    <div>\r\n      <NavBar /> \r\n        <MaterialTable\r\n            icons={tableIcons}\r\n              title=\"DIMPS\"\r\n              columns={[\r\n                { title: 'Mês', field: 'mes' },\r\n                { title: 'Ano', field: 'ano' },\r\n                { title: 'Status', field: 'status'},\r\n                // {  title: 'Dimp',field: 'link'}\r\n              ]}\r\n              data={estabelecimentos}           \r\n              actions={[\r\n                {\r\n                  icon: PrintIcon,\r\n                  tooltip: 'Visualizar',\r\n                    onClick: (event, rowData) => openInNewTab(rowData.link)\r\n                }\r\n\r\n              ]}\r\n              options={{\r\n                actionsColumnIndex: -1\r\n              }}\r\n            />\r\n    </div>  \r\n  )\r\n  \r\n  \r\n}\r\nexport default SentFile;","export default __webpack_public_path__ + \"static/media/DIMP.4a285d50.png\";","import React, { useEffect, useState } from 'react';\r\nimport { Container, Image } from 'react-bootstrap';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\"\r\n\r\nimport {ApiService} from '../../service/ApiService'\r\nimport Dimp from '../../Images/DIMP.png'\r\nimport \"./dimpStyle.css\"\r\n\r\nexport default function SimpleContainer() {\r\n\r\n    const [state, setState] = useState({\r\n        cnpjcpf:'',\r\n        im:'',\r\n        processoConc:'',\r\n        UpDeferimento:'',\r\n        periodoReferencia:'',\r\n    })\r\n    useEffect(()=>{\r\n        ApiService.get('/dimp').then(res=>{\r\n            setState(res.data)\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <Container>\r\n            <figure className=\"position-relative\">\r\n                <img src={Dimp} alt=\"img\" className=\"img-fluid\" />\r\n                <figcaption id=\"cnpjcpf\">asd</figcaption>\r\n                <figcaption id=\"im\">im</figcaption>\r\n                <figcaption id=\"processoConc\">proces</figcaption>\r\n                <figcaption id=\"UPDefererimento\">deferer</figcaption>\r\n                <figcaption id=\"periodoReferencia\">refere</figcaption>\r\n\r\n\r\n                <figcaption id=\"concedido\">conced</figcaption>\r\n                <figcaption id=\"estabelecido\">Estabelecido</figcaption>\r\n                <figcaption id=\"seguintesOpera\">opera</figcaption>\r\n                <figcaption id=\"Obs\">obs</figcaption>\r\n                <figcaption id=\"restricoes\">res</figcaption>\r\n            </figure>\r\n            \r\n\r\n        </Container>\r\n    );\r\n}\r\n","\r\nimport Account from '../Account'\r\nimport Documents from '../Documents'\r\nimport Establishment from '../Establishment'\r\nimport TermsOfUser from '../TermsOfUser'\r\nimport Address from '../Address'\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useState } from 'react'\r\n// import { ApiService } from '../../service/ApiService'\r\nimport Grid from '@material-ui/core/Grid';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport { Container, FormCard, Row, Col, Form, Card } from \"react-bootstrap\";\r\nimport { Checkbox, Link } from '@material-ui/core';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport '../Documents/Documents.css'\r\nimport axios from 'axios'\r\nimport { useEffect } from 'react'\r\nimport { ApiService } from '../../service/ApiService'\r\nimport UploadService from \"../../service/upload-files.service\";\r\nimport Alert from \"@material-ui/lab/Alert\"\r\nimport { Redirect } from 'react-router-dom';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { TextareaAutosize } from '@material-ui/core';\r\nimport NavBar from \"../NavBarEstabelecimento\";\r\n\r\n// import './TimeLine.css'\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  backButton: {\r\n    marginLeft: 'auto',\r\n  },\r\n  instructions: {\r\n\r\n    margin: 'auto',\r\n    // marginTop: theme.spacing(1),\r\n    // marginBottom: theme.spacing(1),\r\n    // alignContent:'center',\r\n    // alignItems:'center'\r\n  },\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  heading: {\r\n    fontSize: theme.typography.pxToRem(15),\r\n    fontWeight: theme.typography.fontWeightRegular,\r\n  },\r\n  termOfUser: {\r\n    // backgroundColor: '#E6E6E6',\r\n    // textAlign: 'center'\r\n    display: 'block',\r\n    margin: 'auto'\r\n  },\r\n  selects: {\r\n    display: 'flex',\r\n    flexDirection: 'row'\r\n  },\r\n  title: {\r\n    padding: theme.spacing(1, 1),\r\n    textAlign: 'center',\r\n    fontWeight: 'bold'\r\n\r\n  },\r\n  paragraph: {\r\n    padding: theme.spacing(1),\r\n    textAlign: 'justify'\r\n\r\n  },\r\n  dialogBox: {\r\n    width: theme.spacing(80)\r\n  },\r\n\r\n}));\r\n\r\nfunction getSteps() {\r\n  return ['Registrar', 'Estabelecimento', 'Endereço', 'Operadoras', 'Documentos'];\r\n}\r\n\r\nfunction getStepContent(stepIndex, handleChange, setState, state, estados, municipios, handleChangeChecked, classes, handleClose, checked, handleClickOpen, open, handleChangeCep, handleblurCep, handleUf, handleCity, handleCpf, existsCpf, isValidCPF,\r\n  typingCep, cidade, setcidade, endereco, enableMessageSucess, handleAdq, operadoras, handleOperadora, adquirentes, tecnologias, provedores, pinPads, firstData, yesOrNo, upload, selectFile, message, adquirentesEdit,usuario) {\r\n  switch (stepIndex) {\r\n    case 0:\r\n      return <div>\r\n         <NavBar />\r\n        <Container>\r\n\r\n          <h6 className=\"text\">{\"Cadastrar Com CPF/CNPJa\"}</h6>\r\n\r\n          <Form className=\"CpfForm\" width={100}>\r\n            <Form.Group>\r\n              <Form.Text className=\"text-muted\">\r\n                Preencher campos abaixo com os seus dados.\r\n              </Form.Text>\r\n              <Form.Label >CPF ou CNPJ</Form.Label>\r\n              <Form.Control value={usuario.username} id=\"username\" onChange={handleChange} onKeyUp={existsCpf} required type=\"text\" />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Nome Completo</Form.Label>\r\n              <Form.Control value={state.nome} id=\"nome\" onChange={handleChange} required type=\"text\" />\r\n\r\n\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Senha</Form.Label>\r\n              <Form.Control value={state.senha} id=\"senha\" onChange={handleChange} required type=\"password\" />\r\n\r\n\r\n            </Form.Group>\r\n            <Form.Group>\r\n              {/* <button onClick={()=>{props.handleForm({nome:'lucas'})}}>Feito</button> */}\r\n            </Form.Group>\r\n          </Form>\r\n          <div className={classes.alert}>\r\n            {!isValidCPF && isValidCPF !== null ? <Alert severity=\"error\">CPF informado encontra-se cadastrado em nosso banco de dados</Alert> : ''}\r\n            {isValidCPF === null ? '' : ''}\r\n            {isValidCPF && isValidCPF !== null ? <Alert severity=\"success\">CPF Válido</Alert> : ''}\r\n          </div>\r\n          <ToastContainer />\r\n        </Container>\r\n      </div>\r\n\r\n    case 1:\r\n      return <Container>\r\n        <Card className='Card'>\r\n          <Card.Title>Cadastre o seu estabelecimento</Card.Title>\r\n          <Form>\r\n            <Row>\r\n              <Col xs={4}>\r\n                <Form.Group>\r\n                  <Form.Label>Razão Social</Form.Label>\r\n                  <Form.Control onChange={handleChange} value={state.razaoSocial} id=\"razaoSocial\" required type=\"text\" />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col xs={4}>\r\n                <Form.Group>\r\n                  <Form.Label>Nome Fantasia</Form.Label>\r\n                  <Form.Control onChange={handleChange} value={state.nomeFantasia} id=\"nomeFantasia\" type=\"text\" />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={4}>\r\n                <Form.Group>\r\n                  <Form.Label>Inscrição Estadual</Form.Label>\r\n                  <Form.Control onChange={handleChange} value={state.ie} id=\"ie\" required type=\"text\" />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col xs={4}>\r\n                <Form.Group>\r\n                  <Form.Label>Inscrição Municipal</Form.Label>\r\n                  <Form.Control onChange={handleChange} value={state.im} id=\"im\" required type=\"text\" />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col xs={4}>\r\n                <Form.Group>\r\n                  <Form.Label>Sequencial IPTU</Form.Label>\r\n                  <Form.Control onChange={handleChange} value={state.iptu} id=\"iptu\" required type=\"text\" />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={4}>\r\n                <Form.Group>\r\n                  <Form.Label>Nome do Responsável</Form.Label>\r\n                  <Form.Control onChange={handleChange} value={state.respNome} id=\"respNome\" required type=\"text\" />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col xs={4}>\r\n                <Form.Group>\r\n                  <Form.Label>Email do Responsável</Form.Label>\r\n                  <Form.Control onChange={handleChange} value={state.respEmail} id=\"respEmail\" required type=\"text\" />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col xs={4}>\r\n                <Form.Group>\r\n                  <Form.Label>CPF do Responsável</Form.Label>\r\n                  <Form.Control onChange={handleChange} value={state.respCpf} id=\"respCpf\" required type=\"text\" />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={6}>\r\n                <Form.Group>\r\n                  <Form.Label>Telefone do Responsável</Form.Label>\r\n                  <Form.Control onChange={handleChange} value={state.respTelefone} id=\"respTelefone\" required type=\"text\" />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col xs={6}>\r\n                <Form.Group>\r\n                  <Form.Label>Segundo Telefone do Responsável</Form.Label>\r\n                  <Form.Control onChange={handleChange} value={state.respCelular} id=\"respCelular\" type=\"text\" />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col xs={4}>\r\n                <Form.Group>\r\n                  <Form.Label>Nome do Contador</Form.Label>\r\n                  <Form.Control onChange={handleChange} value={state.contNome} id=\"contNome\" required type=\"text\" />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col xs={4}>\r\n                <Form.Group>\r\n                  <Form.Label>Email do Contador</Form.Label>\r\n                  <Form.Control onChange={handleChange} value={state.contEmail} id=\"contEmail\" required type=\"text\" />\r\n                </Form.Group>\r\n              </Col>\r\n              <Col xs={4}>\r\n                <Form.Group>\r\n                  <Form.Label>CRC do contador*</Form.Label>\r\n                  <Form.Control onChange={handleChange} value={state.contCrc} id=\"contCrc\" required type=\"text\" />\r\n                </Form.Group>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Card>\r\n      </Container>\r\n    case 2:\r\n      return (\r\n        <div className={classes.root}>\r\n          {/* {console.log(municipios)} */}\r\n          <React.Fragment>\r\n\r\n            <Container maxWidth=\"md\">\r\n              {/* <h3>Endereço</h3> */}\r\n              <Card.Title>Endereço</Card.Title>\r\n              <br />\r\n              <form className={classes.root} noValidate autoComplete=\"off\">\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"flex-start\"\r\n                  alignItems=\"flex-start\"\r\n                >\r\n\r\n                  <Form.Group className={classes.formControl}>\r\n                    <Form.Label>CEP</Form.Label>\r\n                    <Form.Control id=\"cep\" onChange={handleChange} onKeyUp={typingCep} onBlur={handleblurCep} value={state.cep} required type=\"text\" />\r\n                  </Form.Group>\r\n                  <Form.Group className={classes.formControl}>\r\n                    <Form.Label>Endereço</Form.Label>\r\n                    <Form.Control id=\"endereco\" onChange={handleChange} value={state.endereco} required type=\"text\" />\r\n                  </Form.Group>\r\n                  <Form.Group className={classes.formControl}>\r\n                    <Form.Label>Numero</Form.Label>\r\n                    <Form.Control id=\"enderecoNumero\" onChange={handleChange} value={state.enderecoNumero} required type=\"text\" />\r\n                  </Form.Group>\r\n\r\n                </Grid>\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"flex-start\"\r\n                  alignItems=\"flex-start\"\r\n                >\r\n                  <Form.Group className={classes.formControl}>\r\n                    <Form.Label>Complemento</Form.Label>\r\n                    <Form.Control id=\"enderecoComplemento\" onChange={handleChange} value={state.enderecoComplemento} required type=\"text\" />\r\n                  </Form.Group>\r\n                  <Form.Group className={classes.formControl}>\r\n                    <Form.Label>Bairro</Form.Label>\r\n                    <Form.Control id=\"bairro\" onChange={handleChange} value={state.bairro} required type=\"text\" />\r\n                  </Form.Group>\r\n\r\n\r\n                </Grid>\r\n                <Grid\r\n                  container\r\n                  direction=\"row\"\r\n                  justifyContent=\"flex-start\"\r\n                  alignItems=\"flex-start\"\r\n                >\r\n                  {/* <FormControl className={classes.formControl}>\r\n                    <select value={state.uf}>\r\n                      <option value=\"Recife\">Recife</option>\r\n                      <option value=\"Olinda\">Olinda</option>\r\n                      <option value=\"São Paulo\">São Paulo</option>\r\n                    </select>\r\n                  </FormControl> */}\r\n                  {/* <FormControl className={classes.formControl}>\r\n                    <select id=\"cidade\" onChange={(e) => setcidade(e.target.value)} value={cidade}>\r\n                      {municipios.map((cidade) => {\r\n                        return <MenuItem labelId=\"demo-simple-select-label\" key={cidade.id} value={cidade.nome}>{cidade.nome}</MenuItem>\r\n                      })}\r\n                    </select>\r\n                  </FormControl> */}\r\n\r\n\r\n\r\n                  <FormControl className={classes.formControl}>\r\n                    <InputLabel>UF</InputLabel>\r\n                    <Select\r\n\r\n                      id=\"uf\"\r\n                      name=\"uf\"\r\n                      value={state.uf}\r\n                      onChange={handleUf}\r\n                    // onChange={handleChange}\r\n                    > {estados.map((uf, index) => {\r\n                      return <MenuItem id=\"uf\" key={index} value={uf.sigla}>{uf.sigla}</MenuItem>\r\n                    })}\r\n                    </Select>\r\n                  </FormControl>\r\n                  {/* <FormControl className={classes.formControl}>\r\n                    <select value={endereco.city}>\r\n                     {municipios.map((cidade)=>)}\r\n                  </FormControl> */}\r\n                  <FormControl className={classes.formControl}>\r\n                    <InputLabel>Município</InputLabel>\r\n                    <Select\r\n                      labelId=\"demo-simple-select-label\"\r\n                      id=\"cidade\"\r\n                      value={state.cidade}\r\n                      // onChange={(e) => setcidade(e.target.value)}\r\n                      // name=\"city\"\r\n                      onChange={handleCity}\r\n                    >\r\n                      {municipios.map((city, index) => {\r\n                        return <MenuItem id=\"cidade\" key={index} value={city.nome}>{city.nome}</MenuItem>\r\n                      })}\r\n                    </Select>\r\n                  </FormControl>\r\n                </Grid>\r\n                {/* {endereco.cidade}\r\n                <input type=\"text\" onChange={(e) => setcidade(e.target.value)} value={cidade} /> */}\r\n              </form>\r\n            </Container>\r\n          </React.Fragment>\r\n        </div>\r\n      );\r\n    case 3:\r\n\r\n      return (\r\n        <div className={classes.root}>\r\n          {/* {console.log(municipios)} */}\r\n          <React.Fragment>\r\n\r\n            <Container maxWidth=\"md\">\r\n              <Card.Title>Operadoras</Card.Title>\r\n              {adquirentesEdit.map((operadora, key) => {\r\n                {console.log('Entrou')}\r\n                return <div>\r\n                  <form className={classes.root} noValidate autoComplete=\"off\">\r\n                    <Grid\r\n                      container\r\n                      direction=\"row\"\r\n                      justifyContent=\"flex-start\"\r\n                      alignItems=\"flex-start\"\r\n                    >\r\n\r\n                      <FormControl className={classes.formControl}>\r\n                        <Form.Label>Operadora</Form.Label>\r\n                        <select id=\"idadquirente\" value={operadora.idadquirente} onChange={handleOperadora} className=\"form-select\" aria-label=\"Default select example\">\r\n                          {adquirentes.map((adq, index) => {\r\n                            return <option key={index} value={adq.id}>{adq.nome}</option>\r\n                          })}\r\n                        </select>\r\n                      </FormControl>\r\n\r\n                      <FormControl className={classes.formControl}>\r\n                        <Form.Label>Tecnologia</Form.Label>\r\n                        <select id=\"idtecnologi\" onChange={handleOperadora} className=\"form-select\" aria-label=\"Default select example\">\r\n                          {tecnologias.map((tec, index) => {\r\n                            return <option key={index} value={tec.id}>{tec.nome}</option>\r\n                          })}\r\n                        </select>\r\n                      </FormControl>\r\n                      {operadora.idtecnologia == 2 || operadora.idtecnologia == 3 ?\r\n                        <FormControl className={classes.formControl}>\r\n                          <Form.Label>Provedor</Form.Label>\r\n                          <select aria-label=\"Default select example\" id=\"outros\" onChange={handleOperadora} className=\"form-select\" aria-label=\"Default select example\">\r\n                            {provedores.map((outro, index) => {\r\n                              return <option key={index} value={outro.id}>{outro.nome}</option>\r\n                            })}\r\n                          </select>\r\n                        </FormControl>\r\n                        : ''}\r\n\r\n                      {operadora.idtecnologia == 2 || operadora.idtecnologia == 3 ?\r\n                        <FormControl className={classes.formControl}>\r\n                          <Form.Label>Tipo de Pin Pad</Form.Label>\r\n                          <select id=\"pinpad\" name=\"pinpad\" onChange={handleOperadora} className=\"form-select\" aria-label=\"Default select example\">\r\n                            {pinPads.map((tec, index) => {\r\n                              return <option key={index} value={tec}>{tec}</option>\r\n                            })}\r\n                          </select>\r\n                        </FormControl>\r\n                        : ''}\r\n\r\n                      {operadora.idtecnologia == 2 || operadora.idtecnologia == 3 ?\r\n                        <FormControl className={classes.formControl}>\r\n                          <Form.Label>Pin Pad fist Data</Form.Label>\r\n                          <select id=\"firstData\" name=\"firstData\" onChange={handleOperadora} className=\"form-select\" aria-label=\"Default select example\">\r\n                            {firstData.map((tec, index) => {\r\n                              return <option key={index} value={tec}>{tec}</option>\r\n                            })}\r\n                          </select>\r\n                        </FormControl>\r\n                        : ''}\r\n\r\n                      {operadora.idtecnologia == 2 || operadora.idtecnologia == 3 ?\r\n                        <FormControl className={classes.formControl}>\r\n                          <Form.Label>Posto</Form.Label>\r\n                          <select id=\"posto\" name=\"posto\" onChange={handleOperadora} className=\"form-select\" aria-label=\"Default select example\">\r\n                            {yesOrNo.map((tec, index) => {\r\n                              return <option key={index} value={tec}>{tec}</option>\r\n                            })}\r\n                          </select>\r\n                        </FormControl>\r\n                        : ''}\r\n\r\n                      {operadora.idtecnologia == 2 || operadora.idtecnologia == 3 ?\r\n                        <FormControl className={classes.formControl}>\r\n                          <Form.Label>Good Card</Form.Label>\r\n\r\n                          <select id=\"goodCard\" name=\"goodCard\" onChange={handleOperadora} className=\"form-select\" aria-label=\"Default select example\">\r\n                            {yesOrNo.map((tec, index) => {\r\n                              return <option key={index} value={tec}>{tec}</option>\r\n                            })}\r\n                          </select>\r\n\r\n                        </FormControl>\r\n                        : ''}\r\n                    </Grid>\r\n                    <Grid\r\n                      container\r\n                      direction=\"row\"\r\n                      justifyContent=\"flex-start\"\r\n                      alignItems=\"flex-start\"\r\n                    >\r\n\r\n                      {/* <Button onClick={handleAdq}>Adicionar</Button> */}\r\n\r\n                    </Grid>\r\n                    <Grid\r\n                      container\r\n                      direction=\"row\"\r\n                      justifyContent=\"flex-start\"\r\n                      alignItems=\"flex-start\"\r\n                    >\r\n\r\n                      <Form.Group className={classes.formControl}>\r\n                        <Form.Label >Quantidade</Form.Label>\r\n                        <Form.Control value={operadora.qtde} id=\"qtde\" onChange={handleOperadora} required type=\"text\" />\r\n                      </Form.Group>\r\n\r\n                      <Form.Group className={classes.formControl}>\r\n                        <Form.Label>Faturamento Médio</Form.Label>\r\n                        <Form.Control value={operadora.faturamentoMedio} id=\"faturamentoMedio\" onChange={handleOperadora} required type=\"text\" />\r\n                      </Form.Group>\r\n\r\n                      <Form.Group className={classes.formControl}>\r\n                        <Form.Label>Modelo do Pin Pad</Form.Label>\r\n                        <Form.Control value={operadora.pinpadModelo} id=\"pinpadModelo\" onChange={handleOperadora} required type=\"text\" />\r\n                      </Form.Group>\r\n\r\n\r\n                    </Grid>\r\n                    {/* {endereco.cidade}\r\n                <input type=\"text\" onChange={(e) => setcidade(e.target.value)} value={cidade} /> */}\r\n                  </form>\r\n                  \r\n                </div>\r\n\r\n              })}\r\n\r\n              \r\n            </Container>\r\n\r\n          </React.Fragment>\r\n\r\n        </div>\r\n      );\r\n\r\n    case 4:\r\n      return (\r\n        <div className={classes.root}>\r\n          <React.Fragment>\r\n            <Container maxWidth=\"md\">\r\n              <div className=\"flex-div\">\r\n                <h6>\r\n                  <b>Documentação Comprobatória (Para moderação)</b>\r\n                </h6>\r\n                <label style={{ marginLeft: \"20px\" }}>\r\n                  Envie ao menos um documento para prosseguir com o cadastro\r\n                </label>\r\n              </div>\r\n              <div className=\"flex-div\">\r\n                <div className=\"itens\">\r\n                  <h6>Contrato Social</h6>\r\n                  <Button\r\n\r\n                    variant=\"contained\"\r\n                    component=\"label\"\r\n                    color=\"secondary\"\r\n                    onChange={selectFile}\r\n                  >\r\n                    <input name=\"filepond\" id=\"contratoSocial\" type=\"file\" />\r\n                  </Button>\r\n                </div>\r\n                <div className=\"itens\">\r\n                  <h6>Documento oficial com foto</h6>\r\n\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    component=\"label\"\r\n                    color=\"secondary\"\r\n                    onChange={selectFile}\r\n                  >\r\n                    <input name=\"filepond\" id=\"documentoOficial\" type=\"file\" />\r\n                  </Button>\r\n                </div>\r\n                <div className=\"itens\">\r\n                  <h6>CPF</h6>\r\n                  <Button\r\n                    variant=\"contained\"\r\n                    component=\"label\"\r\n                    color=\"secondary\"\r\n                    onChange={selectFile}\r\n                  >\r\n                    <input name=\"filepond\" id=\"cnpjcpf\" type=\"file\" />\r\n                  </Button>\r\n                </div>\r\n                <div className=\"itens\">\r\n                  <Button\r\n\r\n                    variant=\"contained\"\r\n                    component=\"label\"\r\n                    color=\"primary\"\r\n                    onClick={upload}\r\n                  >\r\n                    Upload\r\n                  </Button>\r\n                </div>\r\n                <div>\r\n                  {message === 'Arquivo enviado' ? <Alert severity=\"success\">Arquivo enviado</Alert> : ''}\r\n                </div>\r\n\r\n                <div className=\"checkbox\">\r\n                  <Checkbox\r\n                    required\r\n                    checked={checked}\r\n                    onChange={handleChangeChecked}\r\n                    inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n                  />\r\n                  <span htmlFor=\"\">\r\n                    Li e aceito os{\" \"}\r\n                    <Link onClick={handleClickOpen}>termos de uso</Link>\r\n                  </span>\r\n                </div>\r\n\r\n                <Dialog\r\n                  open={open}\r\n                  onClose={handleClose}\r\n                  aria-labelledby=\"alert-dialog-title\"\r\n                  aria-describedby=\"alert-dialog-description\"\r\n                  className={{ dialogBox: classes.dialogBox }}\r\n                >\r\n                  <DialogTitle id=\"alert-dialog-title\">\r\n                    {\"Termos de Uso\"}\r\n                  </DialogTitle>\r\n                  <DialogContent >\r\n                    <DialogContentText id=\"alert-dialog-description\">\r\n                      <Typography variant=\"h6\" className={classes.title}>\r\n                        AUTORIZAÇÃO PARA CONSULTA ÀS INFORMAÇÕES REFERENTES ÀS\r\n                        OPERAÇÕES FINANCEIRAS EFETUADAS COM CARTÕES DE CRÉDITO E\r\n                        DÉBITO\r\n                      </Typography>\r\n                      <Typography className={classes.paragraph}>\r\n                        Autorizo o <b>MUNICÍPIO DE XXXXX</b>, diretamente e/ou\r\n                        através de pessoa jurídica contratada/conveniada, a\r\n                        efetuar consultas e registros sobre informações\r\n                        referentes a operações financeiras efetuadas com cartões\r\n                        de crédito e débito junto a operadoras de cartões de\r\n                        crédito e débito, com o fim de operacionalização da\r\n                        solução ISS Para todos (issparatodos.com.br).\r\n                      </Typography>\r\n                      <Typography className={classes.paragraph}>\r\n                        O autorizante declara-se ciente de que:\r\n                      </Typography>\r\n                      <Typography className={classes.paragraph}>\r\n                        <b>A)</b> A solução ISS para Todos é constituída por\r\n                        informações relacionadas a operações financeiras\r\n                        realizadas com cartões de crédito e débito por tomadores\r\n                        de serviços domiciliados no Município junto a operadoras\r\n                        de cartões de crédito e débito, com o intuito de\r\n                        apuração do valor do ISSQN devido pelas operadoras de\r\n                        cartões de crédito e débito, nos moldes da Lei\r\n                        Complementar Federal nº. 175, de 23 de setembro de 2020,\r\n                        e legislação correlata, sobretudo municipal;\r\n                      </Typography>\r\n                      <Typography className={classes.paragraph}>\r\n                        <b>B)</b> A solução ISS para Todos não constitui\r\n                        cadastro de inadimplência tributária dos tomadores de\r\n                        serviços domiciliados no Município; e\r\n                      </Typography>\r\n                      <Typography className={classes.paragraph}>\r\n                        <b>C)</b> Pode consultar as informações obtidas mediante\r\n                        acesso ao sítio eletrônico issparatodos.com.br, podendo,\r\n                        inclusive, solicitar correção ou exclusão de eventuais\r\n                        inconformidades que entender existentes, estando,\r\n                        contudo, a solicitação sujeita a análise, que resultará\r\n                        no acolhimento total ou parcial ou desacolhimento.\r\n                      </Typography>\r\n                    </DialogContentText>\r\n                  </DialogContent>\r\n\r\n                  <DialogActions>\r\n                    <div className=\"checkbox\">\r\n                      <Checkbox\r\n                        required\r\n                        checked={checked}\r\n                        onChange={handleChangeChecked}\r\n                        inputProps={{ \"aria-label\": \"primary checkbox\" }}\r\n                      />\r\n                      <span htmlFor=\"\">Li e aceito os termos de uso</span>\r\n                    </div>\r\n\r\n                    {checked ? (\r\n                      <Button\r\n                        onClick={handleClose}\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                      >\r\n                        Ok\r\n                      </Button>\r\n                    ) : (\r\n                      \"\"\r\n                    )}\r\n                  </DialogActions>\r\n                </Dialog>\r\n                {/* </Grid> */}\r\n              </div>\r\n              <hr />\r\n              <div className={classes.alert}>\r\n                {enableMessageSucess === true ? (\r\n                  <Alert severity=\"success\">\r\n                    Cadastro finalizado com sucesso!\r\n                  </Alert>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n                {enableMessageSucess === false ? (\r\n                  <Alert severity=\"error\">O cadastro não foi realizado!</Alert>\r\n                ) : (\r\n                  \"\"\r\n                )}\r\n              </div>\r\n            </Container>\r\n          </React.Fragment>\r\n        </div>\r\n      );\r\n    case 5:\r\n      return <div >\r\n\r\n        <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{\"Termos de Uso\"}</DialogTitle>\r\n          <DialogContent>\r\n            <DialogContentText id=\"alert-dialog-description\">\r\n\r\n              <Typography variant=\"h6\" className={classes.title}>\r\n                AUTORIZAÇÃO PARA CONSULTA ÀS INFORMAÇÕES REFERENTES ÀS OPERAÇÕES\r\n                FINANCEIRAS EFETUADAS COM CARTÕES DE CRÉDITO E DÉBITO\r\n              </Typography>\r\n              <Typography className={classes.paragraph}>\r\n                Autorizo o <b>MUNICÍPIO DE XXXXX</b>, diretamente e/ou através de pessoa jurídica contratada/conveniada, a efetuar consultas e registros sobre informações referentes a operações financeiras efetuadas com cartões de crédito e débito junto a operadoras de cartões de crédito e débito, com o fim de operacionalização da solução ISS Para todos (issparatodos.com.br), por intermédio, especialmente – mas não somente –, do envio de formulários de rotina deste decorrentes.\r\n              </Typography>\r\n              <Typography className={classes.paragraph}>\r\n                <b>A)</b> A solução ISS para Todos é constituída por informações relacionadas a operações financeiras realizadas com cartões de crédito e débito por tomadores de serviços domiciliados no Município junto a operadoras de cartões de crédito e débito, com o intuito de apuração do valor do ISSQN devido pelas operadoras de cartões de crédito e débito, nos moldes da Lei Complementar Federal nº. 175, de 23 de setembro de 2020, e legislação correlata, sobretudo municipal;\r\n              </Typography>\r\n              <Typography className={classes.paragraph}>\r\n                <b>B)</b> A solução ISS para Todos não constitui cadastro de inadimplência tributária dos tomadores de serviços domiciliados no Município; e\r\n              </Typography>\r\n              <Typography className={classes.paragraph}>\r\n                <b>C)</b> Pode consultar as informações obtidas mediante acesso ao sítio eletrônico issparatodos.com.br, podendo, inclusive, solicitar correção ou exclusão de eventuais inconformidades que entender existentes, estando, contudo, a solicitação sujeita a análise, que resultará no acolhimento total ou parcial ou desacolhimento\r\n              </Typography>\r\n\r\n            </DialogContentText>\r\n          </DialogContent>\r\n\r\n          <DialogActions>\r\n\r\n\r\n            <div className=\"checkbox\">\r\n              <Checkbox required checked={checked} onChange={handleChangeChecked} inputProps={{ 'aria-label': 'primary checkbox' }} />\r\n              <span htmlFor=\"\">Li e aceito os termos de uso</span>\r\n            </div>\r\n\r\n            {checked ?\r\n              <Button onClick={handleClose} variant=\"outlined\" color=\"primary\">\r\n                Ok\r\n              </Button> : ''}\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    default:\r\n      return '';\r\n  }\r\n}\r\n\r\nexport default function HorizontalLabelPositionBelowStepper(props) {\r\n\r\n\r\n  const classes = useStyles();\r\n  const [municipios, setMunicipios] = useState([])\r\n  const [activeStep, setActiveStep] = React.useState(0);\r\n  const [estados, setEstados] = useState(['PE', 'SP'])\r\n  const [cidade, setcidade] = useState()\r\n  const [operadoras, setOperadoras] = useState([])\r\n\r\n\r\n\r\n  const [endereco, setEndereco] = useState({\r\n    cep: \"\",\r\n    uf: \"\",\r\n    cidade: cidade,\r\n    bairro: \"\",\r\n    endereco: \"\",\r\n    enderecoNumero: '',\r\n    enderecoComplemento: \"\",\r\n  })\r\n\r\n  // Get estados para edição\r\n  useEffect(() => {\r\n    axios.get('https://servicodados.ibge.gov.br/api/v1/localidades/estados').then(data => {\r\n      setEstados(data.data)\r\n    })\r\n  }, []\r\n  )\r\n\r\n \r\n\r\n  // VARIAVEIS\r\n\r\n  const [enableMessageSucess, setenableMessageSuccess] = useState(null)\r\n  const [isValidCPF, setisValidCPF] = useState(null)\r\n  const [disableBtnNext, setdisableBtnNext] = useState(true)\r\n  const [disableTermUser, setdisableTermUser] = useState(true)\r\n  const [adquirentes, setAdquirentes] = useState({})\r\n  const [city, setCity] = useState(municipios[0])\r\n  const [adquirentesEdit, setAdquirentesEdit] = useState([])\r\n  const [usuario, setUsuario] = useState({})\r\n  const [state, setState] = useState({\r\n    email: '',\r\n    cnpjcpf: '',\r\n    nome: '',\r\n    senha: '',\r\n    razaoSocial: '',\r\n    nomeFantasia: '',\r\n    ie: '',\r\n    im: '',\r\n    iptu: '',\r\n    respNome: '',\r\n    respEmail: '',\r\n    respCpf: '',\r\n    respTelefone: '',\r\n    respCelular: '',\r\n    contNome: '',\r\n    contEmail: '',\r\n    contCrc: '',\r\n    cep: \"\",\r\n    uf: \"\",\r\n    cidade: cidade,\r\n    bairro: \"\",\r\n    endereco: \"\",\r\n    enderecoNumero: '',\r\n    enderecoComplemento: \"\",\r\n    adquirentes: [{\r\n      idtefprovedor: 1,\r\n      idadquirente: 1,\r\n      outros: \"\",\r\n      idtecnologia: 1,\r\n      outrostecnologia: \"\",\r\n      pinpad: \"Proprio\",\r\n      pinpadModelo: \"1111\",\r\n      posto: \"N\",\r\n      goodCard: \"N\",\r\n      firstData: \"USB\",\r\n      qtde: 1,\r\n      faturamentoMedio: 1000.00\r\n    }],\r\n    // operadoras: [\r\n    //   {\r\n    //     idadquirente: 1,\r\n    //     idtecnologi: 1,\r\n    //     outros: \"\",\r\n    //     qtde: 1,\r\n    //     faturamentoMedio: 1000.00\r\n    //   }\r\n    // ]\r\n  })\r\n  \r\n//USE EFFECT PARA CONSUMIR E DEFINIR HOOKS\r\n\r\n  useEffect(() => {\r\n    ApiService.get(`/profile`).then(data => {\r\n      console.log(data.data.usuario)\r\n      setState(data.data.estabelecimento)\r\n     \r\n      setAdquirentesEdit(data.data.adquirentes)\r\n      console.log(data.data.adquirentes)\r\n      setUsuario(data.data.usuario)\r\n    })\r\n    setcidade(state.cidade)\r\n  }, []\r\n  )\r\n  \r\n  \r\n\r\n  // // get cidades para edição\r\n  // useEffect(() => {\r\n  //   axios.get(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${state.uf.toLowerCase()}/municipios`).then(data => {\r\n  //     setMunicipios(data.data)\r\n  //     console.log(data.data)\r\n  //   })\r\n  // }, [state.uf])\r\n\r\n\r\n  //get adquirentes\r\n\r\n  useEffect(() => {\r\n    ApiService.get('/adquirentes').then(req => {\r\n      setAdquirentes(req.data.data)\r\n      //console.log(req.data.data)\r\n    }).catch(error => {\r\n      console.log(error)\r\n    })\r\n  }, [])\r\n\r\n  //get tecnologias\r\n  const [tecnologias, setTecnologias] = useState([])\r\n  useEffect(() => {\r\n    ApiService.get('/tecnologias').then(req => {\r\n      setTecnologias(req.data.data)\r\n      //console.log(req.data.data)\r\n    }).catch(error => {\r\n      console.log(error)\r\n    })\r\n  }, [])\r\n\r\n  //get provedores\r\n  const [provedores, setProvedores] = useState([])\r\n  useEffect(() => {\r\n    ApiService.get('/tefprovedores').then(req => {\r\n      setProvedores(req.data.data)\r\n      console.log(\"provedores: \" + req.data.data)\r\n    }).catch(error => {\r\n      console.log(error)\r\n    })\r\n  }, [])\r\n\r\n\r\n  //tipos de pinPads\r\n  const [pinPads, setPinPads] = useState([\r\n    'Proprio',\r\n    'Terceiro'\r\n  ])\r\n\r\n  //tipos de pinPads\r\n  const [firstData, setfirstData] = useState([\r\n    'USB',\r\n    'SERIAL'\r\n  ])\r\n\r\n  //sim ou nao\r\n  const [yesOrNo, setYesOrNo] = useState([\r\n    'Sim',\r\n    'Não'\r\n  ])\r\n\r\n  //TermoDeLicensa\r\n  const [open, setOpen] = React.useState(false);\r\n  const [checked, setChecked] = React.useState(false);\r\n  const [onBlurCep, setOnblurCep] = useState(false);\r\n  const [onBlurCpf, setOnBlurCpf] = useState(false)\r\n\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleChangeChecked = (event) => {\r\n    setChecked(event.target.checked);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    const { id, value } = e.target\r\n    setState(prevState => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }))\r\n  }\r\n\r\n  //Detecta se a pessoas tirou o foco do input do cep para chamar funcao que retorna a lista de cidades\r\n  function handleBlurCep() {\r\n    setOnblurCep(true)\r\n    var cidade = state.cidade\r\n    getCities(state.uf)\r\n    setcidade(cidade)\r\n  }\r\n\r\n  const [operadora, setOperadora] = useState({\r\n    idadquirente: 0,\r\n    idtecnologi: 0,\r\n    outros: \"\",\r\n    qtde: 0,\r\n    faturamentoMedio: 0,\r\n    pinpadModelo: ''\r\n\r\n  })\r\n\r\n  //Detecta as mudancas no input de adquirencias.\r\n  function handleOperadora(e) {\r\n    const { id, value } = e.target\r\n    setAdquirentesEdit(prevState => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }))\r\n  }\r\n\r\n  //Essa função foi substituida pela função acima handleOperadora\r\n  //Detecta as mudancas no input de adquirencias.\r\n\r\n  function handleAdq(e) {\r\n    console.log(operadora)\r\n    setAdquirentesEdit([...operadoras, operadora])\r\n    state.operadoras.push(operadora)\r\n    console.log(operadoras)\r\n  }\r\n\r\n//Detecta as mudancas no input do estado.\r\n  function handleUf(e) {\r\n    setState((prevState => ({\r\n      ...prevState,\r\n      uf: e.target.value || null\r\n    })))\r\n    getCities(e.target.value)\r\n\r\n  }\r\n//Detecta as mudancas no input da cidade\r\n  function handleCity(e) {\r\n    setcidade(e.target.value)\r\n    console.log(state.cidade);\r\n    setState(prevstate => ({\r\n      ...prevstate,\r\n      cidade: e.target.value\r\n    }))\r\n    console.log(state)\r\n\r\n  }\r\n\r\n  //Retorna a lista de cidades de acordo com o estado selecionado no input select ou retornado pelo cep\r\n  function getCities(uf) {\r\n    axios.get(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${uf}/municipios`).then(data => {\r\n      setMunicipios(data.data)\r\n    })\r\n  }\r\n\r\n  //Retorna os dados do endereco de acordo com o cep.\r\n  //Chamada na funcao typingCep\r\n  function getCep() {\r\n    axios.get(`https://viacep.com.br/ws/${state.cep}/json/`).then(res => {\r\n      getCities(res.data.uf)\r\n      setcidade(res.data.localidade)\r\n      setState((prevState => ({\r\n        ...prevState,\r\n        cep: state.cep,\r\n        uf: res.data.uf,\r\n        cidade: res.data.localidade,\r\n        bairro: res.data.bairro,\r\n        endereco: res.data.logradouro\r\n      })))\r\n    }).catch(erro => console.log(erro))\r\n  }\r\n\r\n  //Detecta as mudancas no input do cep. Mas é bom tirar essa função porque eu troquei para o handleChange   \r\n  function handleChangeCep(e) {\r\n    const { id, value } = e.target\r\n    setEndereco(prevState => ({\r\n      ...prevState,\r\n      [id]: value\r\n    }))\r\n  }\r\n\r\n  // Função chamada quando o input CEP tem 8 caracteres\r\n  function typingCep() {\r\n    if (state.cep.length === 8) {\r\n      getCep()\r\n    }\r\n  }\r\n\r\n  //Retorna se o cpf já existe no servidor para desabilitar o botão\r\n  function getCpf(_cpf) {\r\n    ApiService.get(`/valida/estabelecimentos/${_cpf}`).then(req => {\r\n      console.log(req.data)\r\n      if (req.data.isValid) {\r\n        console.log('Valido :' + req.data.isValid)\r\n        setdisableBtnNext(false)\r\n      }\r\n      setisValidCPF(req.data.isValid)\r\n    }).catch(error => {\r\n      console.log('OCORREU UM ERRO')\r\n      isValidCPF = true;\r\n\r\n    })\r\n\r\n  }\r\n\r\n  //Faz validação se a cidade selecionada corresponde com o cnpj. Desabilitei para avanção nas steps\r\n  const [validatemunicipioCnpj, setValidatemunicipioCnpj] = useState(false)\r\n\r\n\r\n  //Tira os caracteres do CEP\r\n  function modifyCep(cep) {\r\n    cep = cep.replace(/[.]+/g, '').replace(/[-]+/g, '');\r\n    console.log(cep)\r\n    return cep\r\n  }\r\n\r\n\r\n  //Coloca a cidade tudo em minusculo com a primeira letra maiuscula\r\n  //Chamada na função getCnpj\r\n  function modifyCity(city) {\r\n    console.log(city)\r\n    city = city.toLowerCase()\r\n    city = city.replace(/[m]+/g, 'M').replace(/[o]+/g, 'ó')\r\n    console.log(city)\r\n    return city\r\n  }\r\n\r\n  // Pega o telefone e se tiver dois telefones em um, separa e coloca cada um em seu input\r\n  //chamada na função getCnpj. Não tirei na edição pra não quebrar\r\n  function getPhone(phone) {\r\n    var end = 0\r\n    var phone1 = phone\r\n    var phone2 = ''\r\n    for (let index = 0; index < phone.length; index++) {\r\n      if (phone[index] === '/') {\r\n        phone1 = phone.slice(0, index)\r\n        setState((prevState => ({\r\n          ...prevState,\r\n          respCelular: phone2\r\n        })))\r\n        phone2 = phone.slice(index + 1, phone.length)\r\n      }\r\n    }\r\n    return phone1\r\n  }\r\n\r\n  //Pega os dados do Cnpj, chamada na função getCpf. Não tirei na edição pra não quebrar\r\n  function getCnpj() {\r\n    ApiService.get(`/consultacnpj/${state.cnpjcpf}`).then(res => {\r\n      // console.log(res.data)\r\n\r\n      if (res.data.municipio !== \"MACEIO\") {\r\n        console.log('Não é de maceio: ' + res.data.municipio + validatemunicipioCnpj)\r\n        setisValidCPF(false)\r\n\r\n      } else {\r\n        console.log('é de maceió: ' + res.data.municipio + validatemunicipioCnpj)\r\n        setisValidCPF(true)\r\n        setState((prevState => ({\r\n          ...prevState,\r\n          cep: modifyCep(res.data.cep),\r\n          uf: res.data.uf,\r\n          cidade: modifyCity(res.data.municipio),\r\n          bairro: res.data.bairro,\r\n          endereco: res.data.logradouro,\r\n          enderecoNumero: res.data.numero,\r\n          razaoSocial: res.data.nome,\r\n          respNome: res.data.nome,\r\n          respEmail: res.data.email,\r\n          respTelefone: getPhone(res.data.telefone),\r\n          nomeFantasia: res.data.fantasia,\r\n          email: res.data.email\r\n        })))\r\n        getCities(res.data.uf)\r\n        setcidade(modifyCity(res.data.municipio))\r\n      }\r\n    }).catch(erro => {\r\n      console.log(\"Erro de cnpj: \" + erro)\r\n    })\r\n    console.log(cidade)\r\n  }\r\n\r\n\r\n  //Valida o cnpjcpf e tras os dados de acordo. Não tirei na edição pra não quebrar\r\n  function handleCpf() {\r\n    console.log(state.cidade)\r\n    setOnBlurCpf(true)\r\n \r\n    getCnpj()\r\n    console.log(state.cidade)\r\n    getCpf(state.cnpjcpf)\r\n  }\r\n\r\n  // Procura validar o cpf/cnpj. Mas desabilitei para poder avançar nas steps\r\n  function existsCpf() {\r\n    if (state.cnpjcpf.length < 11 || state.cnpjcpf.length > 11) {\r\n      setisValidCPF(true)\r\n    }\r\n    if (state.cnpjcpf.length === 11) {\r\n      getCpf(state.cnpjcpf)\r\n      // validCpfMessage()\r\n    }\r\n    if (state.cnpjcpf.length === 14) {\r\n      modifyCep(state.cep)\r\n      getCnpj()\r\n      modifyCep(state.cep)\r\n\r\n    }\r\n\r\n  }\r\n\r\n\r\n  const [selectedFiles, setSelectState] = useState({\r\n    contratoSocial: {},\r\n    documentoOficial: {},\r\n    cnpjcpf: {},\r\n  })\r\n  //states para envio de arquivos\r\n  const [currentFile, setCurrentFile] = useState(undefined)\r\n  const [progress, setProgress] = useState(0)\r\n  const [message, setMessage] = useState(\"\")\r\n  const [fileInfos, setFileInfos] = useState([])\r\n  const [validLogin, setValidLogin] = useState('')\r\n\r\n  //seleciona o arquivo e coloca de acordo com o id do input\r\n  function selectFile(e) {\r\n    const { id, files } = e.target\r\n    setSelectState(\r\n      prevstate => ({\r\n        ...prevstate,\r\n        [id]: files\r\n      }))\r\n  }\r\n\r\n  //funcão chamada de acordo com o botão de Upload\r\n  function upload() {\r\n    console.log('Upload Start')\r\n    sessionStorage.setItem('cnpjcpf', state.cnpjcpf)\r\n    for (var key in selectedFiles) {\r\n      let currentFile = selectedFiles[key];\r\n      UploadService.upload(currentFile, (event) => {\r\n        console.log('Upload do arquivo ' + currentFile)\r\n        setProgress(Math.round((100 * event.loaded) / event.total))\r\n      })\r\n        .then((response) => {\r\n          setMessage('Arquivo enviado')\r\n          // setMessage(response.data.message)\r\n          console.log(response)\r\n        })\r\n        .then((files) => {\r\n          setFileInfos(files.data)\r\n          // console.log(files)\r\n        })\r\n        .catch((error) => {\r\n          setProgress(0)\r\n\r\n          setMessage(\"Could not upload the file!\")\r\n          setCurrentFile(undefined)\r\n          console.log(\"erro upload\")\r\n          console.log(error)\r\n        });\r\n      console.log(currentFile)\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  //Funçoes para habilitar o botão de próximo na Timeline\r\n\r\n  function validateRegister() {\r\n    if (!state.cnpjcpf === '' || state.nome === '' || state.senha === '') {\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n  function validateEstablishment() {\r\n    if (state.razaoSocial === '' || state.nomeFantasia === '' || state.ie === '' || state.im === '' || state.iptu === '' || state.respCpf === '' || state.respTelefone === '' || state.respCelular === '' || state.respEmail === '' || state.contEmail === '' || state.contNome === '' || state.contCrc === '') {\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n  function validateAddress() {\r\n    if (state.cep === '' || state.endereco === '' || state.enderecoNumero === '' || state.uf === '' || state.cidade === '') {\r\n   \r\n      return false\r\n    }\r\n\r\n    return true\r\n  }\r\n  function validateOperations() {\r\n    if (operadora.idadquirente === '' || operadora.idtecnologia === '' || operadora.faturamentoMedio === '' || operadora.qtde === '' || operadora.pinpadModelo === '') {\r\n      return false\r\n    }\r\n    return true\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  //PUT DO FORM\r\n\r\n  const notify = () => toast(\"Wow so easy !\");\r\n  async function handleSubmit(e) {\r\n    var resEmail = state.respEmail\r\n    notify();\r\n    e.preventDefault()\r\n    toast.success(\"Successfully uploaded\");\r\n    setState(prevState => ({\r\n      ...prevState,\r\n      email: resEmail\r\n    }))\r\n \r\n    var dados = JSON.stringify(state)\r\n    console.log(dados)\r\n    await ApiService.put(`/profile/${props.id}`, dados, { headers: { \"Content-Type\": \"application/json\" } }).then(res => {\r\n      console.log(res)\r\n\r\n      if (res.status === 200) {\r\n        const notify = () => toast(\"Sucesso!\");\r\n        ApiService.post('/sessions', { username: state.cnpjcpf, password: state.senha })\r\n          .then(res => {\r\n            console.log(res.status)\r\n            if (res.status === 200) {\r\n              sessionStorage.setItem('token', res.data.token)\r\n              sessionStorage.setItem('email', state.email)\r\n              setenableMessageSuccess(true)\r\n            }\r\n          }).catch(error => {\r\n            console.log(error)\r\n          })\r\n        setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n\r\n      } else {\r\n        const notify = () => toast(\"Erro!\");\r\n        setenableMessageSuccess(false)\r\n\r\n      }\r\n    }).catch(erro => {\r\n\r\n      console.log('erro: ' + erro)\r\n      setenableMessageSuccess(false)\r\n\r\n    })\r\n  }\r\n\r\n\r\n  //Funções do próprio Material UI para a Stepper\r\n  const steps = getSteps();\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <CssBaseline />\r\n      <Stepper activeStep={activeStep} alternativeLabel>\r\n        {steps.map((label) => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <div >\r\n        {activeStep === steps.length ? (\r\n          <div className={classes.backButton}>\r\n            <Typography className={classes.instructions}>Feito</Typography>\r\n            <Button onClick={handleReset}>Finalizar</Button>\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <form onSubmit={handleSubmit}>\r\n              <div className={classes.instructions}>{getStepContent(activeStep, handleChange, setState, state, estados, municipios, handleChangeChecked, classes, handleClose, checked, handleClickOpen, open, handleChangeCep, handleBlurCep, handleUf, handleCity, handleCpf, existsCpf, isValidCPF, typingCep, cidade, setcidade, endereco, enableMessageSucess, handleAdq, operadoras, handleOperadora, adquirentes, tecnologias, provedores, firstData, pinPads, yesOrNo, upload, selectFile, message, adquirentesEdit, usuario)}</div>\r\n\r\n              <div className=\"container\">\r\n                <Button\r\n\r\n                  disabled={activeStep === 0}\r\n                  onClick={handleBack}\r\n                  className={classes.backButton}\r\n                >\r\n                  Voltar\r\n                </Button>\r\n                {/* {activeStep === 3 && !validateOperations() ? '' : yesOrNo === 'Sim' ? <Button type=\"submit\" variant=\"contained\" color=\"primary\">Cadastrar</Button> : ''} */}\r\n                {activeStep === steps.length - 1 ? <Button variant=\"contained\" color=\"primary\">Finalizar</Button> : ''}\r\n                {activeStep === 0  ? <Button variant=\"contained\" color=\"primary\" name=\"btnNext\" onClick={handleNext}>Próximo </Button> : ''}\r\n\r\n                {/* {activeStep === 0 && validatemunicipioCnpj? 'ok': 'não é'} */}\r\n\r\n                {activeStep === 1  ? <Button variant=\"contained\" color=\"primary\" name=\"btnNext\" onClick={handleNext}>Próximo </Button> : ''}\r\n                {activeStep === 2 ? <Button variant=\"contained\" color=\"primary\" name=\"btnNext\" onClick={handleNext}>Próximo </Button> : ''}\r\n                {activeStep === 3  ? <Button type=\"submit\" variant=\"contained\" color=\"primary\">Salvar</Button> : ''}\r\n                {/* {isValidCPF ? \r\n                  {activeStep === steps.length - 1 ? null : ''}\r\n                 : ''} */}\r\n\r\n              </div>\r\n            </form>\r\n\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n} from 'react-router-dom';\r\nimport StoreProvider from './components/Store/Provider';\r\nimport RoutesPrivate from './components/Routes/Private/Private';\r\nimport SentFile from \"./components/SentFile\";\r\nimport Login from \"./components/Login\";\r\nimport TimeLine from \"./components/TimeLine\";\r\nimport Dashboard from \"./components/Dashboard\";\r\nimport Dimps from \"./components/Dimps\";\r\nimport ScreenDimp from './components/ScreenDimp'\r\nimport EdicaoProfile  from './components/EditTimeLine'\r\nconst PagesRoot = () => (\r\n  <Router>\r\n    <StoreProvider>\r\n      <Switch>\r\n        <Route path=\"/cadastro-estabelecimento\" component={TimeLine} />\r\n        <Route path=\"/login\" component={Login} />\r\n        <Route path=\"/validacao-dimp\" component={ScreenDimp} />\r\n        <RoutesPrivate path=\"/moderador\" component={SentFile} />\r\n        <RoutesPrivate path=\"/dashboard\" component={Dashboard} />\r\n        <RoutesPrivate path=\"/dimps\" component={Dimps} />\r\n        <RoutesPrivate path=\"/perfil\" component={EdicaoProfile} />\r\n      </Switch>\r\n    </StoreProvider>\r\n  </Router>\r\n)\r\n\r\n\r\nexport default PagesRoot;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\n// import App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Routes from './Routes'\r\nimport Header from \"./components/Header\";\r\nimport NavBar from './components/NavBar'\r\nimport ScreenDimp from './components/ScreenDimp'\r\nfunction Layout() {\r\n\r\n    return (\r\n        <div>\r\n            <BrowserRouter>\r\n                {/* { window.location.pathname='/dimp'? <ScreenDimp />: <Header />} */}\r\n                {/* <Header /> */}\r\n                \r\n                <Routes />\r\n            </BrowserRouter>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Layout","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\n// import App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport Layout from \"./Layout\";\r\nimport Header from \"./components/Header\";\r\nReactDOM.render(\r\n  \r\n  <Layout/>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}